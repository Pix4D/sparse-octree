[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/core/CubicOctant.js",
    "content": "import { Vector3 } from \"three\";\nimport { pattern } from \"./Octant.js\";\n\n/**\n * A vector.\n *\n * @type {Vector3}\n * @private\n */\n\nconst c = new Vector3();\n\n/**\n * A cubic octant.\n */\n\nexport class CubicOctant {\n\n\t/**\n\t * Constructs a new cubic octant.\n\t *\n\t * @param {Vector3} [min] - The lower bounds.\n\t * @param {Number} [size=0] - The size of the octant.\n\t */\n\n\tconstructor(min = new Vector3(), size = 0) {\n\n\t\t/**\n\t\t * The lower bounds of this octant.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\n\t\tthis.min = min;\n\n\t\t/**\n\t\t * The size of this octant.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\n\t\tthis.size = size;\n\n\t\t/**\n\t\t * The children of this octant.\n\t\t *\n\t\t * @type {CubicOctant[]}\n\t\t * @default null\n\t\t */\n\n\t\tthis.children = null;\n\n\t}\n\n\t/**\n\t * The upper bounds of this octant.\n\t *\n\t * Accessing this property always creates a new vector.\n\t *\n\t * @type {Vector3}\n\t */\n\n\tget max() {\n\n\t\treturn this.min.clone().addScalar(this.size);\n\n\t}\n\n\t/**\n\t * Computes the center of this octant.\n\t *\n\t * @param {Vector3} [target] - A target vector. If none is provided, a new one will be created.\n\t * @return {Vector3} A vector that describes the center of this octant.\n\t */\n\n\tgetCenter(target = new Vector3()) {\n\n\t\treturn target.copy(this.min).addScalar(this.size * 0.5);\n\n\t}\n\n\t/**\n\t * Returns the size of this octant as a vector.\n\t *\n\t * @param {Vector3} [target] - A target vector. If none is provided, a new one will be created.\n\t * @return {Vector3} A vector that describes the size of this octant.\n\t */\n\n\tgetDimensions(target = new Vector3()) {\n\n\t\treturn target.set(this.size, this.size, this.size);\n\n\t}\n\n\t/**\n\t * Splits this octant into eight smaller ones.\n\t */\n\n\tsplit() {\n\n\t\tconst min = this.min;\n\t\tconst mid = this.getCenter(c);\n\t\tconst halfSize = this.size * 0.5;\n\n\t\tconst children = this.children = [\n\n\t\t\tnull, null,\n\t\t\tnull, null,\n\t\t\tnull, null,\n\t\t\tnull, null\n\n\t\t];\n\n\t\tlet i, combination;\n\n\t\tfor(i = 0; i < 8; ++i) {\n\n\t\t\tcombination = pattern[i];\n\n\t\t\tchildren[i] = new this.constructor(\n\n\t\t\t\tnew Vector3(\n\t\t\t\t\t(combination[0] === 0) ? min.x : mid.x,\n\t\t\t\t\t(combination[1] === 0) ? min.y : mid.y,\n\t\t\t\t\t(combination[2] === 0) ? min.z : mid.z\n\t\t\t\t),\n\n\t\t\t\thalfSize\n\n\t\t\t);\n\n\t\t}\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/core/CubicOctant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "c",
    "memberof": "src/core/CubicOctant.js",
    "static": true,
    "longname": "src/core/CubicOctant.js~c",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/CubicOctant.js",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "class",
    "name": "CubicOctant",
    "memberof": "src/core/CubicOctant.js",
    "static": true,
    "longname": "src/core/CubicOctant.js~CubicOctant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/core/CubicOctant.js",
    "importStyle": "{CubicOctant}",
    "description": "A cubic octant.",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 51,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#constructor",
    "access": "public",
    "description": "Constructs a new cubic octant.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "size",
        "description": "The size of the octant."
      }
    ]
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "min",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#min",
    "access": "public",
    "description": "The lower bounds of this octant.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "size",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#size",
    "access": "public",
    "description": "The size of this octant.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "children",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#children",
    "access": "public",
    "description": "The children of this octant.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "CubicOctant[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "get",
    "name": "max",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#max",
    "access": "public",
    "description": "The upper bounds of this octant.\n\nAccessing this property always creates a new vector.",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#getCenter",
    "access": "public",
    "description": "Computes the center of this octant.",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "target",
        "description": "A target vector. If none is provided, a new one will be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the center of this octant."
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#getDimensions",
    "access": "public",
    "description": "Returns the size of this octant as a vector.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "target",
        "description": "A target vector. If none is provided, a new one will be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the size of this octant."
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "split",
    "memberof": "src/core/CubicOctant.js~CubicOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/CubicOctant.js~CubicOctant#split",
    "access": "public",
    "description": "Splits this octant into eight smaller ones.",
    "lineNumber": 99,
    "params": [],
    "return": null
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/core/Octant.js",
    "content": "import { Vector3 } from \"three\";\n\n/**\n * A vector.\n *\n * @type {Vector3}\n * @private\n */\n\nconst c = new Vector3();\n\n/**\n * An octant.\n */\n\nexport class Octant {\n\n\t/**\n\t * Constructs a new octant.\n\t *\n\t * @param {Vector3} [min] - The lower bounds.\n\t * @param {Vector3} [max] - The upper bounds.\n\t */\n\n\tconstructor(min = new Vector3(), max = new Vector3()) {\n\n\t\t/**\n\t\t * The lower bounds of this octant.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\n\t\tthis.min = min;\n\n\t\t/**\n\t\t * The upper bounds of the octant.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\n\t\tthis.max = max;\n\n\t\t/**\n\t\t * The children of this octant.\n\t\t *\n\t\t * @type {Octant[]}\n\t\t * @default null\n\t\t */\n\n\t\tthis.children = null;\n\n\t}\n\n\t/**\n\t * Computes the center of this octant.\n\t *\n\t * @param {Vector3} [target] - A target vector. If none is provided, a new one will be created.\n\t * @return {Vector3} A vector that describes the center of this octant.\n\t */\n\n\tgetCenter(target = new Vector3()) {\n\n\t\treturn target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\n\t}\n\n\t/**\n\t * Computes the size of this octant.\n\t *\n\t * @param {Vector3} [target] - A target vector. If none is provided, a new one will be created.\n\t * @return {Vector3} A vector that describes the size of this octant.\n\t */\n\n\tgetDimensions(target = new Vector3()) {\n\n\t\treturn target.subVectors(this.max, this.min);\n\n\t}\n\n\t/**\n\t * Splits this octant into eight smaller ones.\n\t */\n\n\tsplit() {\n\n\t\tconst min = this.min;\n\t\tconst max = this.max;\n\t\tconst mid = this.getCenter(c);\n\n\t\tconst children = this.children = [\n\n\t\t\tnull, null,\n\t\t\tnull, null,\n\t\t\tnull, null,\n\t\t\tnull, null\n\n\t\t];\n\n\t\tlet i, combination;\n\n\t\tfor(i = 0; i < 8; ++i) {\n\n\t\t\tcombination = pattern[i];\n\n\t\t\tchildren[i] = new this.constructor(\n\n\t\t\t\tnew Vector3(\n\t\t\t\t\t(combination[0] === 0) ? min.x : mid.x,\n\t\t\t\t\t(combination[1] === 0) ? min.y : mid.y,\n\t\t\t\t\t(combination[2] === 0) ? min.z : mid.z\n\t\t\t\t),\n\n\t\t\t\tnew Vector3(\n\t\t\t\t\t(combination[0] === 0) ? mid.x : max.x,\n\t\t\t\t\t(combination[1] === 0) ? mid.y : max.y,\n\t\t\t\t\t(combination[2] === 0) ? mid.z : max.z\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * A binary pattern that describes the standard octant layout:\n *\n * ```text\n *    3____7\n *  2/___6/|\n *  | 1__|_5\n *  0/___4/\n * ```\n *\n * This common layout is crucial for positional assumptions.\n *\n * @type {Uint8Array[]}\n */\n\nexport const pattern = [\n\n\tnew Uint8Array([0, 0, 0]),\n\tnew Uint8Array([0, 0, 1]),\n\tnew Uint8Array([0, 1, 0]),\n\tnew Uint8Array([0, 1, 1]),\n\n\tnew Uint8Array([1, 0, 0]),\n\tnew Uint8Array([1, 0, 1]),\n\tnew Uint8Array([1, 1, 0]),\n\tnew Uint8Array([1, 1, 1])\n\n];\n\n/**\n * Describes all possible octant corner connections.\n *\n * @type {Uint8Array[]}\n */\n\nexport const edges = [\n\n\t// X-Axis.\n\tnew Uint8Array([0, 4]),\n\tnew Uint8Array([1, 5]),\n\tnew Uint8Array([2, 6]),\n\tnew Uint8Array([3, 7]),\n\n\t// Y-Axis.\n\tnew Uint8Array([0, 2]),\n\tnew Uint8Array([1, 3]),\n\tnew Uint8Array([4, 6]),\n\tnew Uint8Array([5, 7]),\n\n\t// Z-Axis.\n\tnew Uint8Array([0, 1]),\n\tnew Uint8Array([2, 3]),\n\tnew Uint8Array([4, 5]),\n\tnew Uint8Array([6, 7])\n\n];\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/core/Octant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "c",
    "memberof": "src/core/Octant.js",
    "static": true,
    "longname": "src/core/Octant.js~c",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/Octant.js",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "class",
    "name": "Octant",
    "memberof": "src/core/Octant.js",
    "static": true,
    "longname": "src/core/Octant.js~Octant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/core/Octant.js",
    "importStyle": "{Octant}",
    "description": "An octant.",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 62,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#constructor",
    "access": "public",
    "description": "Constructs a new octant.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The upper bounds."
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "min",
    "memberof": "src/core/Octant.js~Octant",
    "static": false,
    "longname": "src/core/Octant.js~Octant#min",
    "access": "public",
    "description": "The lower bounds of this octant.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "max",
    "memberof": "src/core/Octant.js~Octant",
    "static": false,
    "longname": "src/core/Octant.js~Octant#max",
    "access": "public",
    "description": "The upper bounds of the octant.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "children",
    "memberof": "src/core/Octant.js~Octant",
    "static": false,
    "longname": "src/core/Octant.js~Octant#children",
    "access": "public",
    "description": "The children of this octant.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#getCenter",
    "access": "public",
    "description": "Computes the center of this octant.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "target",
        "description": "A target vector. If none is provided, a new one will be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the center of this octant."
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#getDimensions",
    "access": "public",
    "description": "Computes the size of this octant.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "target",
        "description": "A target vector. If none is provided, a new one will be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the size of this octant."
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "split",
    "memberof": "src/core/Octant.js~Octant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octant.js~Octant#split",
    "access": "public",
    "description": "Splits this octant into eight smaller ones.",
    "lineNumber": 84,
    "params": [],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "variable",
    "name": "pattern",
    "memberof": "src/core/Octant.js",
    "static": true,
    "longname": "src/core/Octant.js~pattern",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/core/Octant.js",
    "importStyle": "{pattern}",
    "description": "A binary pattern that describes the standard octant layout:\n\n```text\n   3____7\n 2/___6/|\n | 1__|_5\n 0/___4/\n```\n\nThis common layout is crucial for positional assumptions.",
    "lineNumber": 142,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "edges",
    "memberof": "src/core/Octant.js",
    "static": true,
    "longname": "src/core/Octant.js~edges",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/core/Octant.js",
    "importStyle": "{edges}",
    "description": "Describes all possible octant corner connections.",
    "lineNumber": 162,
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/core/OctantIterator.js",
    "content": "import { Box3 } from \"three\";\nimport IteratorResult from \"iterator-result\";\n\n/**\n * A 3D box.\n *\n * @type {Box3}\n * @private\n */\n\nconst b = new Box3();\n\n/**\n * An octant iterator.\n *\n * @implements {Iterator}\n * @implements {Iterable}\n */\n\nexport class OctantIterator {\n\n\t/**\n\t * Constructs a new octant iterator.\n\t *\n\t * @param {Octree} octree - An octree.\n\t * @param {Frustum|Box3} [region=null] - A cull region.\n\t */\n\n\tconstructor(octree, region = null) {\n\n\t\t/**\n\t\t * The octree.\n\t\t *\n\t\t * @type {Octree}\n\t\t * @private\n\t\t */\n\n\t\tthis.octree = octree;\n\n\t\t/**\n\t\t * A region used for octree culling.\n\t\t *\n\t\t * @type {Frustum|Box3}\n\t\t */\n\n\t\tthis.region = region;\n\n\t\t/**\n\t\t * Whether this iterator should respect the cull region.\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\n\t\tthis.cull = (region !== null);\n\n\t\t/**\n\t\t * An iterator result.\n\t\t *\n\t\t * @type {IteratorResult}\n\t\t * @private\n\t\t */\n\n\t\tthis.result = new IteratorResult();\n\n\t\t/**\n\t\t * An octant trace.\n\t\t *\n\t\t * @type {Octant[]}\n\t\t * @private\n\t\t */\n\n\t\tthis.trace = null;\n\n\t\t/**\n\t\t * Iteration indices.\n\t\t *\n\t\t * @type {Number[]}\n\t\t * @private\n\t\t */\n\n\t\tthis.indices = null;\n\n\t\tthis.reset();\n\n\t}\n\n\t/**\n\t * Resets this iterator.\n\t *\n\t * @return {OctantIterator} This iterator.\n\t */\n\n\treset() {\n\n\t\tconst root = this.octree.root;\n\n\t\tthis.trace = [];\n\t\tthis.indices = [];\n\n\t\tif(root !== null) {\n\n\t\t\tb.min = root.min;\n\t\t\tb.max = root.max;\n\n\t\t\tif(!this.cull || this.region.intersectsBox(b)) {\n\n\t\t\t\tthis.trace.push(root);\n\t\t\t\tthis.indices.push(0);\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.result.reset();\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Iterates over the leaf octants.\n\t *\n\t * @return {IteratorResult} The next leaf octant.\n\t */\n\n\tnext() {\n\n\t\tconst cull = this.cull;\n\t\tconst region = this.region;\n\t\tconst indices = this.indices;\n\t\tconst trace = this.trace;\n\n\t\tlet octant = null;\n\t\tlet depth = trace.length - 1;\n\n\t\tlet index, children, child;\n\n\t\twhile(octant === null && depth >= 0) {\n\n\t\t\tindex = indices[depth]++;\n\t\t\tchildren = trace[depth].children;\n\n\t\t\tif(index < 8) {\n\n\t\t\t\tif(children !== null) {\n\n\t\t\t\t\tchild = children[index];\n\n\t\t\t\t\tif(cull) {\n\n\t\t\t\t\t\tb.min = child.min;\n\t\t\t\t\t\tb.max = child.max;\n\n\t\t\t\t\t\tif(!region.intersectsBox(b)) {\n\n\t\t\t\t\t\t\t// Cull this octant.\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttrace.push(child);\n\t\t\t\t\tindices.push(0);\n\n\t\t\t\t\t++depth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\toctant = trace.pop();\n\t\t\t\t\tindices.pop();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttrace.pop();\n\t\t\t\tindices.pop();\n\n\t\t\t\t--depth;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.result.value = octant;\n\t\tthis.result.done = (octant === null);\n\n\t\treturn this.result;\n\n\t}\n\n\t/**\n\t * Called when this iterator will no longer be run to completion.\n\t *\n\t * @param {Object} value - An interator result value.\n\t * @return {IteratorResult} - A premature completion result.\n\t */\n\n\treturn(value) {\n\n\t\tthis.result.value = value;\n\t\tthis.result.done = true;\n\n\t\treturn this.result;\n\n\t}\n\n\t/**\n\t * Returns this iterator.\n\t *\n\t * @return {OctantIterator} An iterator.\n\t */\n\n\t[Symbol.iterator]() {\n\n\t\treturn this;\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/core/OctantIterator.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "b",
    "memberof": "src/core/OctantIterator.js",
    "static": true,
    "longname": "src/core/OctantIterator.js~b",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctantIterator.js",
    "importStyle": null,
    "description": "A 3D box.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 73,
    "kind": "class",
    "name": "OctantIterator",
    "memberof": "src/core/OctantIterator.js",
    "static": true,
    "longname": "src/core/OctantIterator.js~OctantIterator",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/core/OctantIterator.js",
    "importStyle": "{OctantIterator}",
    "description": "An octant iterator.",
    "lineNumber": 20,
    "interface": false,
    "implements": [
      "Iterator",
      "Iterable"
    ]
  },
  {
    "__docId__": 74,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#constructor",
    "access": "public",
    "description": "Constructs a new octant iterator.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "An octree."
      },
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "region",
        "description": "A cull region."
      }
    ]
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "octree",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#octree",
    "access": "private",
    "description": "The octree.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Octree"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "region",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#region",
    "access": "public",
    "description": "A region used for octree culling.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Frustum",
        "Box3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "cull",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#cull",
    "access": "public",
    "description": "Whether this iterator should respect the cull region.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "result",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#result",
    "access": "private",
    "description": "An iterator result.",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "IteratorResult"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "trace",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#trace",
    "access": "private",
    "description": "An octant trace.",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "indices",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#indices",
    "access": "private",
    "description": "Iteration indices.",
    "lineNumber": 81,
    "type": {
      "nullable": null,
      "types": [
        "Number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "reset",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#reset",
    "access": "public",
    "description": "Resets this iterator.",
    "lineNumber": 93,
    "return": {
      "nullable": null,
      "types": [
        "OctantIterator"
      ],
      "spread": false,
      "description": "This iterator."
    },
    "params": []
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "next",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#next",
    "access": "public",
    "description": "Iterates over the leaf octants.",
    "lineNumber": 126,
    "return": {
      "nullable": null,
      "types": [
        "IteratorResult"
      ],
      "spread": false,
      "description": "The next leaf octant."
    },
    "params": []
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "return",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#return",
    "access": "public",
    "description": "Called when this iterator will no longer be run to completion.",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "An interator result value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IteratorResult"
      ],
      "spread": false,
      "description": "A premature completion result."
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/core/OctantIterator.js~OctantIterator",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/OctantIterator.js~OctantIterator#[Symbol.iterator]",
    "access": "public",
    "description": "Returns this iterator.",
    "lineNumber": 215,
    "return": {
      "nullable": null,
      "types": [
        "OctantIterator"
      ],
      "spread": false,
      "description": "An iterator."
    },
    "params": []
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/core/Octree.js",
    "content": "import { Box3 } from \"three\";\nimport { Octant } from \"./Octant.js\";\nimport { OctantIterator } from \"./OctantIterator.js\";\nimport { OctreeRaycaster } from \"./OctreeRaycaster.js\";\n\n/**\n * A 3D box.\n *\n * @type {Box3}\n * @private\n */\n\nconst b = new Box3();\n\n/**\n * Recursively calculates the depth of the given octree.\n *\n * @private\n * @param {Octant} octant - An octant.\n * @return {Number} The depth.\n */\n\nfunction getDepth(octant) {\n\n\tconst children = octant.children;\n\n\tlet result = 0;\n\tlet i, l, d;\n\n\tif(children !== null) {\n\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\n\n\t\t\td = 1 + getDepth(children[i]);\n\n\t\t\tif(d > result) {\n\n\t\t\t\tresult = d;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Recursively collects octants that lie inside the specified region.\n *\n * @private\n * @param {Octant} octant - An octant.\n * @param {Frustum|Box3} region - A region.\n * @param {Octant[]} result - A list to be filled with octants that intersect with the region.\n */\n\nfunction cull(octant, region, result) {\n\n\tconst children = octant.children;\n\n\tlet i, l;\n\n\tb.min = octant.min;\n\tb.max = octant.max;\n\n\tif(region.intersectsBox(b)) {\n\n\t\tif(children !== null) {\n\n\t\t\tfor(i = 0, l = children.length; i < l; ++i) {\n\n\t\t\t\tcull(children[i], region, result);\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tresult.push(octant);\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Recursively fetches all octants with the specified depth level.\n *\n * @private\n * @param {Octant} octant - An octant.\n * @param {Number} level - The target depth level.\n * @param {Number} depth - The current depth level.\n * @param {Octant[]} result - A list to be filled with the identified octants.\n */\n\nfunction findOctantsByLevel(octant, level, depth, result) {\n\n\tconst children = octant.children;\n\n\tlet i, l;\n\n\tif(depth === level) {\n\n\t\tresult.push(octant);\n\n\t} else if(children !== null) {\n\n\t\t++depth;\n\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\n\n\t\t\tfindOctantsByLevel(children[i], level, depth, result);\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * An octree that subdivides space for fast spatial searches.\n *\n * @implements {Iterable}\n */\n\nexport class Octree {\n\n\t/**\n\t * Constructs a new octree.\n\t *\n\t * @param {Vector3} [min] - The lower bounds of the tree. If not provided, the octree will not create a root node.\n\t * @param {Vector3} [max] - The upper bounds of the tree. If not provided, the octree will not create a root node.\n\t */\n\n\tconstructor(min, max) {\n\n\t\t/**\n\t\t * The root octant.\n\t\t *\n\t\t * @type {Octant}\n\t\t * @default null\n\t\t */\n\n\t\tthis.root = (min !== undefined && max !== undefined) ? new Octant(min, max) : null;\n\n\t}\n\n\t/**\n\t * The lower bounds of the root octant.\n\t *\n\t * @type {Vector3}\n\t */\n\n\tget min() {\n\n\t\treturn this.root.min;\n\n\t}\n\n\t/**\n\t * The upper bounds of the root octant.\n\t *\n\t * @type {Vector3}\n\t */\n\n\tget max() {\n\n\t\treturn this.root.max;\n\n\t}\n\n\t/**\n\t * The children of the root octant.\n\t *\n\t * @type {Octant[]}\n\t */\n\n\tget children() {\n\n\t\treturn this.root.children;\n\n\t}\n\n\t/**\n\t * Calculates the center of this octree.\n\t *\n\t * @param {Vector3} [target] - A target vector. If none is provided, a new one will be created.\n\t * @return {Vector3} A vector that describes the center of this octree.\n\t */\n\n\tgetCenter(target) {\n\n\t\treturn this.root.getCenter(target);\n\n\t}\n\n\t/**\n\t * Calculates the size of this octree.\n\t *\n\t * @param {Vector3} [target] - A target vector. If none is provided, a new one will be created.\n\t * @return {Vector3} A vector that describes the size of this octree.\n\t */\n\n\tgetDimensions(target) {\n\n\t\treturn this.root.getDimensions(target);\n\n\t}\n\n\t/**\n\t * Calculates the current depth of this octree.\n\t *\n\t * @return {Number} The depth.\n\t */\n\n\tgetDepth() {\n\n\t\treturn getDepth(this.root);\n\n\t}\n\n\t/**\n\t * Recursively collects octants that intersect with the specified region.\n\t *\n\t * @param {Frustum|Box3} region - A region.\n\t * @return {Octant[]} The octants.\n\t */\n\n\tcull(region) {\n\n\t\tconst result = [];\n\n\t\tcull(this.root, region, result);\n\n\t\treturn result;\n\n\t}\n\n\t/**\n\t * Fetches all octants with the specified depth level.\n\t *\n\t * @param {Number} level - The depth level.\n\t * @return {Octant[]} The octants.\n\t */\n\n\tfindOctantsByLevel(level) {\n\n\t\tconst result = [];\n\n\t\tfindOctantsByLevel(this.root, level, 0, result);\n\n\t\treturn result;\n\n\t}\n\n\t/**\n\t * Finds the octants that intersect with the given ray. The intersecting\n\t * octants are sorted by distance, closest first.\n\t *\n\t * @param {Raycaster} raycaster - A raycaster.\n\t * @param {Octant[]} [intersects] - An optional target list to be filled with the intersecting octants.\n\t * @return {Octant[]} The intersecting octants.\n\t */\n\n\traycast(raycaster, intersects = []) {\n\n\t\tOctreeRaycaster.intersectOctree(this, raycaster, intersects);\n\n\t\treturn intersects;\n\n\t}\n\n\t/**\n\t * Returns an iterator that traverses the octree and returns leaf nodes.\n\t *\n\t * When a cull region is provided, the iterator will only return leaves that\n\t * intersect with that region.\n\t *\n\t * @param {Frustum|Box3} [region] - A cull region.\n\t * @return {OctantIterator} An iterator.\n\t */\n\n\tleaves(region) {\n\n\t\treturn new OctantIterator(this, region);\n\n\t}\n\n\t/**\n\t * Returns an iterator that traverses the octree and returns all leaf nodes.\n\t *\n\t * @return {OctantIterator} An iterator.\n\t */\n\n\t[Symbol.iterator]() {\n\n\t\treturn new OctantIterator(this);\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/core/Octree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "b",
    "memberof": "src/core/Octree.js",
    "static": true,
    "longname": "src/core/Octree.js~b",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/Octree.js",
    "importStyle": null,
    "description": "A 3D box.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "getDepth",
    "memberof": "src/core/Octree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Octree.js~getDepth",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/Octree.js",
    "importStyle": null,
    "description": "Recursively calculates the depth of the given octree.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The depth."
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "cull",
    "memberof": "src/core/Octree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Octree.js~cull",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/Octree.js",
    "importStyle": null,
    "description": "Recursively collects octants that lie inside the specified region.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      },
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "region",
        "description": "A region."
      },
      {
        "nullable": null,
        "types": [
          "Octant[]"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "A list to be filled with octants that intersect with the region."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "findOctantsByLevel",
    "memberof": "src/core/Octree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/Octree.js~findOctantsByLevel",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/Octree.js",
    "importStyle": null,
    "description": "Recursively fetches all octants with the specified depth level.",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The target depth level."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": "The current depth level."
      },
      {
        "nullable": null,
        "types": [
          "Octant[]"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "A list to be filled with the identified octants."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 92,
    "kind": "class",
    "name": "Octree",
    "memberof": "src/core/Octree.js",
    "static": true,
    "longname": "src/core/Octree.js~Octree",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/core/Octree.js",
    "importStyle": "{Octree}",
    "description": "An octree that subdivides space for fast spatial searches.",
    "lineNumber": 128,
    "interface": false,
    "implements": [
      "Iterable"
    ]
  },
  {
    "__docId__": 93,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#constructor",
    "access": "public",
    "description": "Constructs a new octree.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds of the tree. If not provided, the octree will not create a root node."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The upper bounds of the tree. If not provided, the octree will not create a root node."
      }
    ]
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "root",
    "memberof": "src/core/Octree.js~Octree",
    "static": false,
    "longname": "src/core/Octree.js~Octree#root",
    "access": "public",
    "description": "The root octant.",
    "lineNumber": 146,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "null"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Octant"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "get",
    "name": "min",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#min",
    "access": "public",
    "description": "The lower bounds of the root octant.",
    "lineNumber": 156,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "get",
    "name": "max",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#max",
    "access": "public",
    "description": "The upper bounds of the root octant.",
    "lineNumber": 168,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "get",
    "name": "children",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#children",
    "access": "public",
    "description": "The children of the root octant.",
    "lineNumber": 180,
    "type": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#getCenter",
    "access": "public",
    "description": "Calculates the center of this octree.",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "target",
        "description": "A target vector. If none is provided, a new one will be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the center of this octree."
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "getDimensions",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#getDimensions",
    "access": "public",
    "description": "Calculates the size of this octree.",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "target",
        "description": "A target vector. If none is provided, a new one will be created."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "A vector that describes the size of this octree."
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "getDepth",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#getDepth",
    "access": "public",
    "description": "Calculates the current depth of this octree.",
    "lineNumber": 218,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The depth."
    },
    "params": []
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "cull",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#cull",
    "access": "public",
    "description": "Recursively collects octants that intersect with the specified region.",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": false,
        "name": "region",
        "description": "A region."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": "The octants."
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "findOctantsByLevel",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#findOctantsByLevel",
    "access": "public",
    "description": "Fetches all octants with the specified depth level.",
    "lineNumber": 248,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The depth level."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": "The octants."
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "raycast",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#raycast",
    "access": "public",
    "description": "Finds the octants that intersect with the given ray. The intersecting\noctants are sorted by distance, closest first.",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "A raycaster."
      },
      {
        "nullable": null,
        "types": [
          "Octant[]"
        ],
        "spread": false,
        "optional": true,
        "name": "intersects",
        "description": "An optional target list to be filled with the intersecting octants."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Octant[]"
      ],
      "spread": false,
      "description": "The intersecting octants."
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "leaves",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#leaves",
    "access": "public",
    "description": "Returns an iterator that traverses the octree and returns leaf nodes.\n\nWhen a cull region is provided, the iterator will only return leaves that\nintersect with that region.",
    "lineNumber": 285,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frustum",
          "Box3"
        ],
        "spread": false,
        "optional": true,
        "name": "region",
        "description": "A cull region."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "OctantIterator"
      ],
      "spread": false,
      "description": "An iterator."
    }
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "[Symbol.iterator]",
    "memberof": "src/core/Octree.js~Octree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/core/Octree.js~Octree#[Symbol.iterator]",
    "access": "public",
    "description": "Returns an iterator that traverses the octree and returns all leaf nodes.",
    "lineNumber": 297,
    "return": {
      "nullable": null,
      "types": [
        "OctantIterator"
      ],
      "spread": false,
      "description": "An iterator."
    },
    "params": []
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/core/OctreeRaycaster.js",
    "content": "import { Box3, Ray, Vector3 } from \"three\";\n\n/**\n * A list of vectors.\n *\n * @type {Vector3[]}\n * @private\n * @final\n */\n\nconst v = [\n\tnew Vector3(),\n\tnew Vector3(),\n\tnew Vector3()\n];\n\n/**\n * A box.\n *\n * @type {Box3}\n * @private\n * @final\n */\n\nconst b = new Box3();\n\n/**\n * A ray.\n *\n * @type {Ray}\n * @private\n * @final\n */\n\nconst r = new Ray();\n\n/**\n * A lookup-table containing octant ids. Used to determine the exit plane from\n * an octant.\n *\n * @type {Uint8Array[]}\n * @private\n * @final\n */\n\nconst octantTable = [\n\n\tnew Uint8Array([4, 2, 1]),\n\tnew Uint8Array([5, 3, 8]),\n\tnew Uint8Array([6, 8, 3]),\n\tnew Uint8Array([7, 8, 8]),\n\tnew Uint8Array([8, 6, 5]),\n\tnew Uint8Array([8, 7, 8]),\n\tnew Uint8Array([8, 8, 7]),\n\tnew Uint8Array([8, 8, 8])\n\n];\n\n/**\n * A byte that stores raycasting flags.\n *\n * @type {Number}\n * @private\n */\n\nlet flags = 0;\n\n/**\n * Finds the entry plane of the first octant that a ray travels through.\n *\n * Determining the first octant requires knowing which of the t0s is the\n * largest. The tms of the other axes must also be compared against that\n * largest t0.\n *\n * @private\n * @param {Number} tx0 - Ray projection parameter.\n * @param {Number} ty0 - Ray projection parameter.\n * @param {Number} tz0 - Ray projection parameter.\n * @param {Number} txm - Ray projection parameter mean.\n * @param {Number} tym - Ray projection parameter mean.\n * @param {Number} tzm - Ray projection parameter mean.\n * @return {Number} The index of the first octant that the ray travels through.\n */\n\nfunction findEntryOctant(tx0, ty0, tz0, txm, tym, tzm) {\n\n\tlet entry = 0;\n\n\t// Find the entry plane.\n\tif(tx0 > ty0 && tx0 > tz0) {\n\n\t\t// YZ-plane.\n\t\tif(tym < tx0) {\n\n\t\t\tentry |= 2;\n\n\t\t}\n\n\t\tif(tzm < tx0) {\n\n\t\t\tentry |= 1;\n\n\t\t}\n\n\t} else if(ty0 > tz0) {\n\n\t\t// XZ-plane.\n\t\tif(txm < ty0) {\n\n\t\t\tentry |= 4;\n\n\t\t}\n\n\t\tif(tzm < ty0) {\n\n\t\t\tentry |= 1;\n\n\t\t}\n\n\t} else {\n\n\t\t// XY-plane.\n\t\tif(txm < tz0) {\n\n\t\t\tentry |= 4;\n\n\t\t}\n\n\t\tif(tym < tz0) {\n\n\t\t\tentry |= 2;\n\n\t\t}\n\n\t}\n\n\treturn entry;\n\n}\n\n/**\n * Finds the next octant that intersects with the ray based on the exit plane of\n * the current one.\n *\n * @private\n * @param {Number} currentOctant - The index of the current octant.\n * @param {Number} tx1 - Ray projection parameter.\n * @param {Number} ty1 - Ray projection parameter.\n * @param {Number} tz1 - Ray projection parameter.\n * @return {Number} The index of the next octant that the ray travels through.\n */\n\nfunction findNextOctant(currentOctant, tx1, ty1, tz1) {\n\n\tlet min;\n\tlet exit = 0;\n\n\t// Find the exit plane.\n\tif(tx1 < ty1) {\n\n\t\tmin = tx1;\n\t\texit = 0; // YZ-plane.\n\n\t} else {\n\n\t\tmin = ty1;\n\t\texit = 1; // XZ-plane.\n\n\t}\n\n\tif(tz1 < min) {\n\n\t\texit = 2; // XY-plane.\n\n\t}\n\n\treturn octantTable[currentOctant][exit];\n\n}\n\n/**\n * Finds all octants that intersect with the given ray.\n *\n * @private\n * @param {Octant} octant - The current octant.\n * @param {Number} tx0 - Ray projection parameter. Initial tx0 = (minX - rayOriginX) / rayDirectionX.\n * @param {Number} ty0 - Ray projection parameter. Initial ty0 = (minY - rayOriginY) / rayDirectionY.\n * @param {Number} tz0 - Ray projection parameter. Initial tz0 = (minZ - rayOriginZ) / rayDirectionZ.\n * @param {Number} tx1 - Ray projection parameter. Initial tx1 = (maxX - rayOriginX) / rayDirectionX.\n * @param {Number} ty1 - Ray projection parameter. Initial ty1 = (maxY - rayOriginY) / rayDirectionY.\n * @param {Number} tz1 - Ray projection parameter. Initial tz1 = (maxZ - rayOriginZ) / rayDirectionZ.\n * @param {Raycaster} raycaster - The raycaster.\n * @param {Array} intersects - An array to be filled with the intersecting octants.\n */\n\nfunction raycastOctant(octant, tx0, ty0, tz0, tx1, ty1, tz1, raycaster, intersects) {\n\n\tconst children = octant.children;\n\n\tlet currentOctant;\n\tlet txm, tym, tzm;\n\n\tif(tx1 >= 0.0 && ty1 >= 0.0 && tz1 >= 0.0) {\n\n\t\tif(children === null) {\n\n\t\t\t// Leaf.\n\t\t\tintersects.push(octant);\n\n\t\t} else {\n\n\t\t\t// Compute means.\n\t\t\ttxm = 0.5 * (tx0 + tx1);\n\t\t\ttym = 0.5 * (ty0 + ty1);\n\t\t\ttzm = 0.5 * (tz0 + tz1);\n\n\t\t\tcurrentOctant = findEntryOctant(tx0, ty0, tz0, txm, tym, tzm);\n\n\t\t\tdo {\n\n\t\t\t\t/* The possibilities for the next node are passed in the same respective\n\t\t\t\t * order as the t-values. Hence, if the first value is found to be the\n\t\t\t\t * greatest, the fourth one will be returned. If the second value is the\n\t\t\t\t * greatest, the fifth one will be returned, etc.\n\t\t\t\t */\n\n\t\t\t\tswitch(currentOctant) {\n\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\traycastOctant(children[flags], tx0, ty0, tz0, txm, tym, tzm, raycaster, intersects);\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, tym, tzm);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\traycastOctant(children[flags ^ 1], tx0, ty0, tzm, txm, tym, tz1, raycaster, intersects);\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, tym, tz1);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\traycastOctant(children[flags ^ 2], tx0, tym, tz0, txm, ty1, tzm, raycaster, intersects);\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, ty1, tzm);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\traycastOctant(children[flags ^ 3], tx0, tym, tzm, txm, ty1, tz1, raycaster, intersects);\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, txm, ty1, tz1);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\traycastOctant(children[flags ^ 4], txm, ty0, tz0, tx1, tym, tzm, raycaster, intersects);\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, tx1, tym, tzm);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\traycastOctant(children[flags ^ 5], txm, ty0, tzm, tx1, tym, tz1, raycaster, intersects);\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, tx1, tym, tz1);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 6:\n\t\t\t\t\t\traycastOctant(children[flags ^ 6], txm, tym, tz0, tx1, ty1, tzm, raycaster, intersects);\n\t\t\t\t\t\tcurrentOctant = findNextOctant(currentOctant, tx1, ty1, tzm);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\traycastOctant(children[flags ^ 7], txm, tym, tzm, tx1, ty1, tz1, raycaster, intersects);\n\t\t\t\t\t\t// Far top right octant. No other octants can be reached from here.\n\t\t\t\t\t\tcurrentOctant = 8;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} while(currentOctant < 8);\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * An octree raycaster.\n *\n * Based on:\n *  \"An Efficient Parametric Algorithm for Octree Traversal\"\n *  by J. Revelles et al. (2000).\n */\n\nexport class OctreeRaycaster {\n\n\t/**\n\t * Finds the octants that intersect with the given ray. The intersecting\n\t * octants are sorted by distance, closest first.\n\t *\n\t * @param {Octree} octree - An octree.\n\t * @param {Raycaster} raycaster - A raycaster.\n\t * @param {Array} intersects - A list to be filled with intersecting octants.\n\t */\n\n\tstatic intersectOctree(octree, raycaster, intersects) {\n\n\t\t// Translate the octree extents to the scene origin.\n\t\tconst min = b.min.set(0, 0, 0);\n\t\tconst max = b.max.subVectors(octree.max, octree.min);\n\n\t\tconst dimensions = octree.getDimensions(v[0]);\n\t\tconst halfDimensions = v[1].copy(dimensions).multiplyScalar(0.5);\n\n\t\tconst origin = r.origin.copy(raycaster.ray.origin);\n\t\tconst direction = r.direction.copy(raycaster.ray.direction);\n\n\t\tlet invDirX, invDirY, invDirZ;\n\t\tlet tx0, tx1, ty0, ty1, tz0, tz1;\n\n\t\t// Translate the ray to the center of the octree.\n\t\torigin.sub(octree.getCenter(v[2])).add(halfDimensions);\n\n\t\t// Reset all flags.\n\t\tflags = 0;\n\n\t\t// Handle rays with negative directions.\n\t\tif(direction.x < 0.0) {\n\n\t\t\torigin.x = dimensions.x - origin.x;\n\t\t\tdirection.x = -direction.x;\n\t\t\tflags |= 4;\n\n\t\t}\n\n\t\tif(direction.y < 0.0) {\n\n\t\t\torigin.y = dimensions.y - origin.y;\n\t\t\tdirection.y = -direction.y;\n\t\t\tflags |= 2;\n\n\t\t}\n\n\t\tif(direction.z < 0.0) {\n\n\t\t\torigin.z = dimensions.z - origin.z;\n\t\t\tdirection.z = -direction.z;\n\t\t\tflags |= 1;\n\n\t\t}\n\n\t\t// Improve IEEE double stability.\n\t\tinvDirX = 1.0 / direction.x;\n\t\tinvDirY = 1.0 / direction.y;\n\t\tinvDirZ = 1.0 / direction.z;\n\n\t\t// Project the ray to the root's boundaries.\n\t\ttx0 = (min.x - origin.x) * invDirX;\n\t\ttx1 = (max.x - origin.x) * invDirX;\n\t\tty0 = (min.y - origin.y) * invDirY;\n\t\tty1 = (max.y - origin.y) * invDirY;\n\t\ttz0 = (min.z - origin.z) * invDirZ;\n\t\ttz1 = (max.z - origin.z) * invDirZ;\n\n\t\t// Check if the ray hits the octree.\n\t\tif(Math.max(Math.max(tx0, ty0), tz0) < Math.min(Math.min(tx1, ty1), tz1)) {\n\n\t\t\t// Find the intersecting octants.\n\t\t\traycastOctant(octree.root, tx0, ty0, tz0, tx1, ty1, tz1, raycaster, intersects);\n\n\t\t}\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/core/OctreeRaycaster.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "variable",
    "name": "v",
    "memberof": "src/core/OctreeRaycaster.js",
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~v",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "A list of vectors.",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "variable",
    "name": "b",
    "memberof": "src/core/OctreeRaycaster.js",
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~b",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "A box.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 109,
    "kind": "variable",
    "name": "r",
    "memberof": "src/core/OctreeRaycaster.js",
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~r",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "A ray.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Ray"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "octantTable",
    "memberof": "src/core/OctreeRaycaster.js",
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~octantTable",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "A lookup-table containing octant ids. Used to determine the exit plane from\nan octant.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Uint8Array[]"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "flags",
    "memberof": "src/core/OctreeRaycaster.js",
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~flags",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "A byte that stores raycasting flags.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "findEntryOctant",
    "memberof": "src/core/OctreeRaycaster.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~findEntryOctant",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "Finds the entry plane of the first octant that a ray travels through.\n\nDetermining the first octant requires knowing which of the t0s is the\nlargest. The tms of the other axes must also be compared against that\nlargest t0.",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx0",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty0",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz0",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "txm",
        "description": "Ray projection parameter mean."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tym",
        "description": "Ray projection parameter mean."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tzm",
        "description": "Ray projection parameter mean."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The index of the first octant that the ray travels through."
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "findNextOctant",
    "memberof": "src/core/OctreeRaycaster.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~findNextOctant",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "Finds the next octant that intersects with the ray based on the exit plane of\nthe current one.",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "currentOctant",
        "description": "The index of the current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx1",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty1",
        "description": "Ray projection parameter."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz1",
        "description": "Ray projection parameter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The index of the next octant that the ray travels through."
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "raycastOctant",
    "memberof": "src/core/OctreeRaycaster.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~raycastOctant",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": null,
    "description": "Finds all octants that intersect with the given ray.",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx0",
        "description": "Ray projection parameter. Initial tx0 = (minX - rayOriginX) / rayDirectionX."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty0",
        "description": "Ray projection parameter. Initial ty0 = (minY - rayOriginY) / rayDirectionY."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz0",
        "description": "Ray projection parameter. Initial tz0 = (minZ - rayOriginZ) / rayDirectionZ."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tx1",
        "description": "Ray projection parameter. Initial tx1 = (maxX - rayOriginX) / rayDirectionX."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "ty1",
        "description": "Ray projection parameter. Initial ty1 = (maxY - rayOriginY) / rayDirectionY."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "tz1",
        "description": "Ray projection parameter. Initial tz1 = (maxZ - rayOriginZ) / rayDirectionZ."
      },
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "The raycaster."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "intersects",
        "description": "An array to be filled with the intersecting octants."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "OctreeRaycaster",
    "memberof": "src/core/OctreeRaycaster.js",
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~OctreeRaycaster",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/core/OctreeRaycaster.js",
    "importStyle": "{OctreeRaycaster}",
    "description": "An octree raycaster.\n\nBased on:\n \"An Efficient Parametric Algorithm for Octree Traversal\"\n by J. Revelles et al. (2000).",
    "lineNumber": 288,
    "interface": false
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "intersectOctree",
    "memberof": "src/core/OctreeRaycaster.js~OctreeRaycaster",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/core/OctreeRaycaster.js~OctreeRaycaster.intersectOctree",
    "access": "public",
    "description": "Finds the octants that intersect with the given ray. The intersecting\noctants are sorted by distance, closest first.",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "An octree."
      },
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "A raycaster."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "intersects",
        "description": "A list to be filled with intersecting octants."
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/core/index.js",
    "content": "/**\n * Core components.\n *\n * @module sparse-octree/core\n */\n\nexport { CubicOctant } from \"./CubicOctant.js\";\nexport { Octree } from \"./Octree.js\";\nexport { Octant, pattern, edges } from \"./Octant.js\";\nexport { OctantIterator } from \"./OctantIterator.js\";\nexport { OctreeRaycaster } from \"./OctreeRaycaster.js\";\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/core/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\n * Exposure of the library components.\n *\n * @module sparse-octree\n */\n\nexport {\n\tCubicOctant,\n\tedges,\n\tOctant,\n\tOctree,\n\tOctantIterator,\n\tOctreeRaycaster,\n\tpattern\n} from \"./core\";\n\nexport {\n\tPointOctant,\n\tPointOctree,\n\tRayPointIntersection\n} from \"./points\";\n\nexport {\n\tOctreeUtils\n} from \"./utils\";\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "src/points/PointOctant.js",
    "content": "import { Vector3 } from \"three\";\nimport { Octant } from \"../core/Octant.js\";\n\n/**\n * A point.\n *\n * @type {Vector3}\n * @private\n */\n\nconst p = new Vector3();\n\n/**\n * An octant that maintains points.\n */\n\nexport class PointOctant extends Octant {\n\n\t/**\n\t * Constructs a new point octant.\n\t *\n\t * @param {Vector3} [min] - The lower bounds.\n\t * @param {Vector3} [max] - The upper bounds.\n\t */\n\n\tconstructor(min, max) {\n\n\t\tsuper(min, max);\n\n\t\t/**\n\t\t * The points.\n\t\t *\n\t\t * @type {Vector3[]}\n\t\t */\n\n\t\tthis.points = null;\n\n\t\t/**\n\t\t * Point data.\n\t\t *\n\t\t * @type {Array}\n\t\t */\n\n\t\tthis.data = null;\n\n\t}\n\n\t/**\n\t * Computes the distance squared from this octant to the given point.\n\t *\n\t * @param {Vector3} point - A point.\n\t * @return {Number} The distance squared.\n\t */\n\n\tdistanceToSquared(point) {\n\n\t\tconst clampedPoint = p.copy(point).clamp(this.min, this.max);\n\n\t\treturn clampedPoint.sub(point).lengthSquared();\n\n\t}\n\n\t/**\n\t * Computes the distance squared from the center of this octant to the given\n\t * point.\n\t *\n\t * @param {Vector3} point - A point.\n\t * @return {Number} The distance squared.\n\t */\n\n\tdistanceToCenterSquared(point) {\n\n\t\tconst center = this.getCenter(p);\n\n\t\tconst dx = point.x - center.x;\n\t\tconst dy = point.y - center.x;\n\t\tconst dz = point.z - center.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\t/**\n\t * Checks if the given point lies inside this octant's boundaries.\n\t *\n\t * This method can also be used to check if this octant intersects a sphere by\n\t * providing a radius as bias.\n\t *\n\t * @param {Vector3} point - A point.\n\t * @param {Number} bias - A padding that extends the boundaries temporarily.\n\t * @return {Boolean} Whether the given point lies inside this octant.\n\t */\n\n\tcontains(point, bias) {\n\n\t\tconst min = this.min;\n\t\tconst max = this.max;\n\n\t\treturn (\n\t\t\tpoint.x >= min.x - bias &&\n\t\t\tpoint.y >= min.y - bias &&\n\t\t\tpoint.z >= min.z - bias &&\n\t\t\tpoint.x <= max.x + bias &&\n\t\t\tpoint.y <= max.y + bias &&\n\t\t\tpoint.z <= max.z + bias\n\t\t);\n\n\t}\n\n\t/**\n\t * Redistributes existing points to child octants.\n\t *\n\t * @param {Number} bias - A proximity threshold.\n\t */\n\n\tredistribute(bias) {\n\n\t\tconst children = this.children;\n\t\tconst points = this.points;\n\t\tconst data = this.data;\n\n\t\tlet i, j, il, jl;\n\t\tlet child, point, entry;\n\n\t\tif(children !== null && points !== null) {\n\n\t\t\tfor(i = 0, il = points.length; i < il; ++i) {\n\n\t\t\t\tpoint = points[i];\n\t\t\t\tentry = data[i];\n\n\t\t\t\tfor(j = 0, jl = children.length; j < jl; ++j) {\n\n\t\t\t\t\tchild = children[j];\n\n\t\t\t\t\tif(child.contains(point, bias)) {\n\n\t\t\t\t\t\tif(child.points === null) {\n\n\t\t\t\t\t\t\tchild.points = [];\n\t\t\t\t\t\t\tchild.data = [];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchild.points.push(point);\n\t\t\t\t\t\tchild.data.push(entry);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.points = null;\n\t\tthis.data = null;\n\n\t}\n\n\t/**\n\t * Gathers all points from the children. The children are expected to be leaf\n\t * octants and will be dropped afterwards.\n\t */\n\n\tmerge() {\n\n\t\tconst children = this.children;\n\n\t\tlet i, l;\n\t\tlet child;\n\n\t\tif(children !== null) {\n\n\t\t\tthis.points = [];\n\t\t\tthis.data = [];\n\n\t\t\tfor(i = 0, l = children.length; i < l; ++i) {\n\n\t\t\t\tchild = children[i];\n\n\t\t\t\tif(child.points !== null) {\n\n\t\t\t\t\tthis.points.push(...child.points);\n\t\t\t\t\tthis.data.push(...child.data);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.children = null;\n\n\t\t}\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/points/PointOctant.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "variable",
    "name": "p",
    "memberof": "src/points/PointOctant.js",
    "static": true,
    "longname": "src/points/PointOctant.js~p",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctant.js",
    "importStyle": null,
    "description": "A point.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 121,
    "kind": "class",
    "name": "PointOctant",
    "memberof": "src/points/PointOctant.js",
    "static": true,
    "longname": "src/points/PointOctant.js~PointOctant",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/points/PointOctant.js",
    "importStyle": "{PointOctant}",
    "description": "An octant that maintains points.",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/core/Octant.js~Octant"
    ]
  },
  {
    "__docId__": 122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#constructor",
    "access": "public",
    "description": "Constructs a new point octant.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The upper bounds."
      }
    ]
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "points",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#points",
    "access": "public",
    "description": "The points.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Vector3[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "data",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#data",
    "access": "public",
    "description": "Point data.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "distanceToSquared",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#distanceToSquared",
    "access": "public",
    "description": "Computes the distance squared from this octant to the given point.",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance squared."
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "distanceToCenterSquared",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#distanceToCenterSquared",
    "access": "public",
    "description": "Computes the distance squared from the center of this octant to the given\npoint.",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The distance squared."
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "contains",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#contains",
    "access": "public",
    "description": "Checks if the given point lies inside this octant's boundaries.\n\nThis method can also be used to check if this octant intersects a sphere by\nproviding a radius as bias.",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bias",
        "description": "A padding that extends the boundaries temporarily."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the given point lies inside this octant."
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "redistribute",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#redistribute",
    "access": "public",
    "description": "Redistributes existing points to child octants.",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "bias",
        "description": "A proximity threshold."
      }
    ],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "merge",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#merge",
    "access": "public",
    "description": "Gathers all points from the children. The children are expected to be leaf\noctants and will be dropped afterwards.",
    "lineNumber": 168,
    "params": [],
    "return": null
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "children",
    "memberof": "src/points/PointOctant.js~PointOctant",
    "static": false,
    "longname": "src/points/PointOctant.js~PointOctant#children",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/points/PointOctree.js",
    "content": "import { Vector3 } from \"three\";\nimport { Octree } from \"../core/Octree.js\";\nimport { PointOctant } from \"./PointOctant.js\";\nimport { RayPointIntersection } from \"./RayPointIntersection.js\";\n\n/**\n * A threshold for distance comparisons.\n *\n * @type {Number}\n * @private\n */\n\nconst THRESHOLD = 1e-6;\n\n/**\n * Recursively counts how many points are in the given octant.\n *\n * @private\n * @param {Octant} octant - An octant.\n * @return {Number} The amount of points.\n */\n\nfunction countPoints(octant) {\n\n\tconst children = octant.children;\n\n\tlet result = 0;\n\tlet i, l;\n\n\tif(children !== null) {\n\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\n\n\t\t\tresult += countPoints(children[i]);\n\n\t\t}\n\n\t} else if(octant.points !== null) {\n\n\t\tresult = octant.points.length;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Recursively places a point into the octree.\n *\n * @private\n * @param {Vector3} point - A point.\n * @param {Object} data - An object that the point represents.\n * @param {Octree} octree - The octree.\n * @param {Octant} octant - The current octant.\n * @param {Number} depth - The current depth.\n * @return {Boolean} Whether the operation was successful.\n */\n\nfunction put(point, data, octree, octant, depth) {\n\n\tlet children = octant.children;\n\tlet exists = false;\n\tlet done = false;\n\tlet i, l;\n\n\tif(octant.contains(point, octree.bias)) {\n\n\t\tif(children === null) {\n\n\t\t\tif(octant.points === null) {\n\n\t\t\t\toctant.points = [];\n\t\t\t\toctant.data = [];\n\n\t\t\t} else {\n\n\t\t\t\tfor(i = 0, l = octant.points.length; !exists && i < l; ++i) {\n\n\t\t\t\t\texists = octant.points[i].equals(point);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif(exists) {\n\n\t\t\t\toctant.data[i - 1] = data;\n\t\t\t\tdone = true;\n\n\t\t\t} else if(octant.points.length < octree.maxPoints || depth === octree.maxDepth) {\n\n\t\t\t\toctant.points.push(point.clone());\n\t\t\t\toctant.data.push(data);\n\t\t\t\t++octree.pointCount;\n\t\t\t\tdone = true;\n\n\t\t\t} else {\n\n\t\t\t\toctant.split();\n\t\t\t\toctant.redistribute(octree.bias);\n\t\t\t\tchildren = octant.children;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif(children !== null) {\n\n\t\t\t++depth;\n\n\t\t\tfor(i = 0, l = children.length; !done && i < l; ++i) {\n\n\t\t\t\tdone = put(point, data, octree, children[i], depth);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn done;\n\n}\n\n/**\n * Recursively finds a point in the octree and removes it.\n *\n * @private\n * @param {Vector3} point - A point.\n * @param {Octree} octree - The octree.\n * @param {Octant} octant - The current octant.\n * @param {Octant} parent - The parent of the current octant.\n * @return {Object} The data entry of the removed point or null if it didn't exist.\n */\n\nfunction remove(point, octree, octant, parent) {\n\n\tconst children = octant.children;\n\n\tlet result = null;\n\n\tlet i, l;\n\tlet points, data, last;\n\n\tif(octant.contains(point, octree.bias)) {\n\n\t\tif(children !== null) {\n\n\t\t\tfor(i = 0, l = children.length; result === null && i < l; ++i) {\n\n\t\t\t\tresult = remove(point, octree, children[i], octant);\n\n\t\t\t}\n\n\t\t} else if(octant.points !== null) {\n\n\t\t\tpoints = octant.points;\n\t\t\tdata = octant.data;\n\n\t\t\tfor(i = 0, l = points.length; i < l; ++i) {\n\n\t\t\t\tif(points[i].equals(point)) {\n\n\t\t\t\t\tlast = l - 1;\n\t\t\t\t\tresult = data[i];\n\n\t\t\t\t\t// If the point is NOT the last one in the array:\n\t\t\t\t\tif(i < last) {\n\n\t\t\t\t\t\t// Overwrite with the last point and data entry.\n\t\t\t\t\t\tpoints[i] = points[last];\n\t\t\t\t\t\tdata[i] = data[last];\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Drop the last entry.\n\t\t\t\t\tpoints.pop();\n\t\t\t\t\tdata.pop();\n\n\t\t\t\t\t--octree.pointCount;\n\n\t\t\t\t\tif(parent !== null && countPoints(parent) <= octree.maxPoints) {\n\n\t\t\t\t\t\tparent.merge();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Recursively finds a point in the octree and fetches the associated data.\n *\n * @private\n * @param {Vector3} point - A point.\n * @param {Octree} octree - The octree.\n * @param {Octant} octant - The current octant octant.\n * @return {Object} The data entry that is associated with the given point or null if it doesn't exist.\n */\n\nfunction fetch(point, octree, octant) {\n\n\tconst children = octant.children;\n\n\tlet result = null;\n\n\tlet i, l;\n\tlet points;\n\n\tif(octant.contains(point, octree.bias)) {\n\n\t\tif(children !== null) {\n\n\t\t\tfor(i = 0, l = children.length; result === null && i < l; ++i) {\n\n\t\t\t\tresult = fetch(point, octree, children[i]);\n\n\t\t\t}\n\n\t\t} else if(octant.points !== null) {\n\n\t\t\tpoints = octant.points;\n\n\t\t\tfor(i = 0, l = points.length; result === null && i < l; ++i) {\n\n\t\t\t\tif(point.distanceToSquared(points[i]) <= THRESHOLD) {\n\n\t\t\t\t\tresult = octant.data[i];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Recursively moves an existing point to a new position.\n *\n * @private\n * @param {Vector3} point - The point.\n * @param {Vector3} position - The new position.\n * @param {Octree} octree - The octree.\n * @param {Octant} octant - The current octant.\n * @param {Octant} parent - The parent of the current octant.\n * @param {Number} depth - The current depth.\n * @return {Object} The data entry of the updated point or null if it didn't exist.\n */\n\nfunction move(point, position, octree, octant, parent, depth) {\n\n\tconst children = octant.children;\n\n\tlet result = null;\n\n\tlet i, l;\n\tlet points;\n\n\tif(octant.contains(point, octree.bias)) {\n\n\t\tif(octant.contains(position, octree.bias)) {\n\n\t\t\t// The point and the new position both fall into the current octant.\n\t\t\tif(children !== null) {\n\n\t\t\t\t++depth;\n\n\t\t\t\tfor(i = 0, l = children.length; result === null && i < l; ++i) {\n\n\t\t\t\t\tresult = move(point, position, octree, children[i], octant, depth);\n\n\t\t\t\t}\n\n\t\t\t} else if(octant.points !== null) {\n\n\t\t\t\t// No divergence - the point can be updated in place.\n\t\t\t\tpoints = octant.points;\n\n\t\t\t\tfor(i = 0, l = points.length; i < l; ++i) {\n\n\t\t\t\t\tif(point.distanceToSquared(points[i]) <= THRESHOLD) {\n\n\t\t\t\t\t\t// The point exists! Update its position.\n\t\t\t\t\t\tpoints[i].copy(position);\n\t\t\t\t\t\tresult = octant.data[i];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Retrieve the point and remove it.\n\t\t\tresult = remove(point, octree, octant, parent);\n\n\t\t\t// Go back to the parent octant and add the updated point.\n\t\t\tput(position, result, octree, parent, depth - 1);\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Recursively finds the closest point to the given one.\n *\n * @private\n * @param {Vector3} point - The point.\n * @param {Number} maxDistance - The maximum distance.\n * @param {Boolean} skipSelf - Whether a point that is exactly at the given position should be skipped.\n * @param {Octant} octant - The current octant.\n * @return {Object} An object representing the nearest point or null if there is none. The object has a point and a data property.\n */\n\nfunction findNearestPoint(point, maxDistance, skipSelf, octant) {\n\n\tconst points = octant.points;\n\tconst children = octant.children;\n\n\tlet result = null;\n\tlet bestDist = maxDistance;\n\n\tlet i, l;\n\tlet p, distSq;\n\n\tlet sortedChildren;\n\tlet child, childResult;\n\n\tif(children !== null) {\n\n\t\t// Sort the children: smallest distance to the point first, ASC.\n\t\tsortedChildren = children.map((child) => {\n\n\t\t\t// Precompute distances.\n\t\t\treturn {\n\t\t\t\toctant: child,\n\t\t\t\tdistance: child.distanceToCenterSquared(point)\n\t\t\t};\n\n\t\t}).sort((a, b) => a.distance - b.distance);\n\n\t\t// Traverse from closest to furthest.\n\t\tfor(i = 0, l = sortedChildren.length; i < l; ++i) {\n\n\t\t\t// Unpack octant.\n\t\t\tchild = sortedChildren[i].octant;\n\n\t\t\tif(child.contains(point, bestDist)) {\n\n\t\t\t\tchildResult = findNearestPoint(point, bestDist, skipSelf, child);\n\n\t\t\t\tif(childResult !== null) {\n\n\t\t\t\t\tdistSq = childResult.point.distanceToSquared(point);\n\n\t\t\t\t\tif((!skipSelf || distSq > 0.0) && distSq < bestDist) {\n\n\t\t\t\t\t\tbestDist = distSq;\n\t\t\t\t\t\tresult = childResult;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else if(points !== null) {\n\n\t\tfor(i = 0, l = points.length; i < l; ++i) {\n\n\t\t\tp = points[i];\n\t\t\tdistSq = point.distanceToSquared(p);\n\n\t\t\tif((!skipSelf || distSq > 0.0) && distSq < bestDist) {\n\n\t\t\t\tbestDist = distSq;\n\n\t\t\t\tresult = {\n\t\t\t\t\tpoint: p.clone(),\n\t\t\t\t\tdata: octant.data[i]\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Recursively finds points that are inside the specified radius around a given\n * position.\n *\n * @private\n * @param {Vector3} point - A position.\n * @param {Number} radius - A radius.\n * @param {Boolean} skipSelf - Whether a point that is exactly at the given position should be skipped.\n * @param {Octant} octant - The current octant.\n * @param {Array} result - An array to be filled with objects, each containing a point and a data property.\n */\n\nfunction findPoints(point, radius, skipSelf, octant, result) {\n\n\tconst points = octant.points;\n\tconst children = octant.children;\n\tconst rSq = radius * radius;\n\n\tlet i, l;\n\n\tlet p, distSq;\n\tlet child;\n\n\tif(children !== null) {\n\n\t\tfor(i = 0, l = children.length; i < l; ++i) {\n\n\t\t\tchild = children[i];\n\n\t\t\tif(child.contains(point, radius)) {\n\n\t\t\t\tfindPoints(point, radius, skipSelf, child, result);\n\n\t\t\t}\n\n\t\t}\n\n\t} else if(points !== null) {\n\n\t\tfor(i = 0, l = points.length; i < l; ++i) {\n\n\t\t\tp = points[i];\n\t\t\tdistSq = point.distanceToSquared(p);\n\n\t\t\tif((!skipSelf || distSq > 0.0) && distSq <= rSq) {\n\n\t\t\t\tresult.push({\n\t\t\t\t\tpoint: p.clone(),\n\t\t\t\t\tdata: octant.data[i]\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * An octree that manages points.\n */\n\nexport class PointOctree extends Octree {\n\n\t/**\n\t * Constructs a new point octree.\n\t *\n\t * @param {Vector3} [min] - The lower bounds of the tree.\n\t * @param {Vector3} [max] - The upper bounds of the tree.\n\t * @param {Number} [bias=0.0] - An octant boundary bias.\n\t * @param {Number} [maxPoints=8] - Number of distinct points per octant before it splits up.\n\t * @param {Number} [maxDepth=8] - The maximum tree depth level, starting at 0.\n\t */\n\n\tconstructor(min, max, bias = 0.0, maxPoints = 8, maxDepth = 8) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The root octant.\n\t\t *\n\t\t * @type {PointOctant}\n\t\t */\n\n\t\tthis.root = new PointOctant(min, max);\n\n\t\t/**\n\t\t * An octant boundary bias.\n\t\t *\n\t\t * The octree is considered \"loose\" with a bias greater than 0.\n\t\t *\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\n\t\tthis.bias = Math.max(0.0, bias);\n\n\t\t/**\n\t\t * Number of points per octant before a split occurs.\n\t\t *\n\t\t * This value works together with the maximum depth as a secondary limiting\n\t\t * factor. Smaller values cause splits to occur earlier which results in a\n\t\t * faster and deeper tree growth.\n\t\t *\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\n\t\tthis.maxPoints = Math.max(1, Math.round(maxPoints));\n\n\t\t/**\n\t\t * The maximum tree depth level.\n\t\t *\n\t\t * It's possible to use Infinity, but keep in mind that allowing infinitely\n\t\t * small octants can have a severely negative impact on performance.\n\t\t * Finding a value that works best for a specific scene is advisable.\n\t\t *\n\t\t * @type {Number}\n\t\t * @private\n\t\t */\n\n\t\tthis.maxDepth = Math.max(0, Math.round(maxDepth));\n\n\t\t/**\n\t\t * The amount of points that are currently in this octree.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\n\t\tthis.pointCount = 0;\n\n\t}\n\n\t/**\n\t * Counts how many points are in the given octant.\n\t *\n\t * @param {Octant} octant - An octant.\n\t * @return {Number} The amount of points.\n\t */\n\n\tcountPoints(octant) {\n\n\t\treturn countPoints(octant);\n\n\t}\n\n\t/**\n\t * Puts a point into the octree.\n\t *\n\t * @param {Vector3} point - A point. If it's already in the octree, the data entry will be updated.\n\t * @param {Object} data - A data object that belongs to the point.\n\t * @return {Boolean} Whether the operation was successful.\n\t */\n\n\tput(point, data) {\n\n\t\treturn put(point, data, this, this.root, 0);\n\n\t}\n\n\t/**\n\t * Removes a point from the tree.\n\t *\n\t * @param {Vector3} point - A point.\n\t * @return {Object} The data entry of the removed point or null if it didn't exist.\n\t */\n\n\tremove(point) {\n\n\t\treturn remove(point, this, this.root, null);\n\n\t}\n\n\t/**\n\t * Retrieves the data of the specified point.\n\t *\n\t * @param {Vector3} point - A position.\n\t * @return {Object} The data entry that is associated with the given point or null if it doesn't exist.\n\t */\n\n\tfetch(point) {\n\n\t\treturn fetch(point, this, this.root);\n\n\t}\n\n\t/**\n\t * Moves an existing point to a new position. Has no effect if the point\n\t * doesn't exist.\n\t *\n\t * @param {Vector3} point - The point.\n\t * @param {Vector3} position - The new position.\n\t * @return {Object} The data entry of the updated point or null if it didn't exist.\n\t */\n\n\tmove(point, position) {\n\n\t\treturn move(point, position, this, this.root, null, 0);\n\n\t}\n\n\t/**\n\t * Finds the closest point to the given one.\n\t *\n\t * @param {Vector3} point - A point.\n\t * @param {Number} [maxDistance=Infinity] - An upper limit for the distance between the points.\n\t * @param {Boolean} [skipSelf=false] - Whether a point that is exactly at the given position should be skipped.\n\t * @return {Object} An object representing the nearest point or null if there is none. The object has a point and a data property.\n\t */\n\n\tfindNearestPoint(point, maxDistance = Infinity, skipSelf = false) {\n\n\t\treturn findNearestPoint(point, maxDistance, skipSelf, this.root);\n\n\t}\n\n\t/**\n\t * Finds points that are in the specified radius around the given position.\n\t *\n\t * @param {Vector3} point - A position.\n\t * @param {Number} radius - A radius.\n\t * @param {Boolean} [skipSelf=false] - Whether a point that is exactly at the given position should be skipped.\n\t * @return {Array} An array of objects, each containing a point and a data property.\n\t */\n\n\tfindPoints(point, radius, skipSelf = false) {\n\n\t\tconst result = [];\n\n\t\tfindPoints(point, radius, skipSelf, this.root, result);\n\n\t\treturn result;\n\n\t}\n\n\t/**\n\t * Finds the points that intersect with the given ray.\n\t *\n\t * @param {Raycaster} raycaster - The raycaster.\n\t * @param {Array} [intersects] - An array to be filled with the intersecting points.\n\t * @return {RayPointIntersection[]} The intersecting points.\n\t */\n\n\traycast(raycaster, intersects = []) {\n\n\t\tconst octants = super.raycast(raycaster);\n\n\t\tif(octants.length > 0) {\n\n\t\t\t// Collect intersecting points.\n\t\t\tthis.testPoints(octants, raycaster, intersects);\n\n\t\t}\n\n\t\treturn intersects;\n\n\t}\n\n\t/**\n\t * Collects points that intersect with the given ray.\n\t *\n\t * @param {Octant[]} octants - An array containing octants that intersect with the ray.\n\t * @param {Raycaster} raycaster - The raycaster.\n\t * @param {Array} intersects - An array to be filled with intersecting points.\n\t */\n\n\ttestPoints(octants, raycaster, intersects) {\n\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst thresholdSq = threshold * threshold;\n\n\t\tlet intersectPoint;\n\t\tlet distance, distanceToRay;\n\t\tlet rayPointDistanceSq;\n\n\t\tlet i, j, il, jl;\n\t\tlet octant, points, point;\n\n\t\tfor(i = 0, il = octants.length; i < il; ++i) {\n\n\t\t\toctant = octants[i];\n\t\t\tpoints = octant.points;\n\n\t\t\tif(points !== null) {\n\n\t\t\t\tfor(j = 0, jl = points.length; j < jl; ++j) {\n\n\t\t\t\t\tpoint = points[j];\n\t\t\t\t\trayPointDistanceSq = raycaster.ray.distanceSqToPoint(point);\n\n\t\t\t\t\tif(rayPointDistanceSq < thresholdSq) {\n\n\t\t\t\t\t\tintersectPoint = raycaster.ray.closestPointToPoint(point, new Vector3());\n\t\t\t\t\t\tdistance = raycaster.ray.origin.distanceTo(intersectPoint);\n\n\t\t\t\t\t\tif(distance >= raycaster.near && distance <= raycaster.far) {\n\n\t\t\t\t\t\t\tdistanceToRay = Math.sqrt(rayPointDistanceSq);\n\n\t\t\t\t\t\t\tintersects.push(new RayPointIntersection(\n\t\t\t\t\t\t\t\tdistance,\n\t\t\t\t\t\t\t\tdistanceToRay,\n\t\t\t\t\t\t\t\tintersectPoint,\n\t\t\t\t\t\t\t\toctant.data[j]\n\t\t\t\t\t\t\t));\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/points/PointOctree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "THRESHOLD",
    "memberof": "src/points/PointOctree.js",
    "static": true,
    "longname": "src/points/PointOctree.js~THRESHOLD",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "A threshold for distance comparisons.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "countPoints",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~countPoints",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "Recursively counts how many points are in the given octant.",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The amount of points."
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "put",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~put",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "Recursively places a point into the octree.",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "An object that the point represents."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": "The current depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the operation was successful."
    },
    "ignore": true
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "remove",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~remove",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "Recursively finds a point in the octree and removes it.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "The parent of the current octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the removed point or null if it didn't exist."
    },
    "ignore": true
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "fetch",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~fetch",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "Recursively finds a point in the octree and fetches the associated data.",
    "lineNumber": 213,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry that is associated with the given point or null if it doesn't exist."
    },
    "ignore": true
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "move",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~move",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "Recursively moves an existing point to a new position.",
    "lineNumber": 267,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "The new position."
      },
      {
        "nullable": null,
        "types": [
          "Octree"
        ],
        "spread": false,
        "optional": false,
        "name": "octree",
        "description": "The octree."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "The parent of the current octant."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "depth",
        "description": "The current depth."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the updated point or null if it didn't exist."
    },
    "ignore": true
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "findNearestPoint",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~findNearestPoint",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "Recursively finds the closest point to the given one.",
    "lineNumber": 339,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxDistance",
        "description": "The maximum distance."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object representing the nearest point or null if there is none. The object has a point and a data property."
    },
    "ignore": true
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "findPoints",
    "memberof": "src/points/PointOctree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/points/PointOctree.js~findPoints",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": null,
    "description": "Recursively finds points that are inside the specified radius around a given\nposition.",
    "lineNumber": 431,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A position."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "A radius."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      },
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The current octant."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "An array to be filled with objects, each containing a point and a data property."
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "class",
    "name": "PointOctree",
    "memberof": "src/points/PointOctree.js",
    "static": true,
    "longname": "src/points/PointOctree.js~PointOctree",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/points/PointOctree.js",
    "importStyle": "{PointOctree}",
    "description": "An octree that manages points.",
    "lineNumber": 482,
    "interface": false,
    "extends": [
      "src/core/Octree.js~Octree"
    ]
  },
  {
    "__docId__": 145,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#constructor",
    "access": "public",
    "description": "Constructs a new point octree.",
    "lineNumber": 494,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "min",
        "description": "The lower bounds of the tree."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "max",
        "description": "The upper bounds of the tree."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.0",
        "defaultRaw": 0,
        "name": "bias",
        "description": "An octant boundary bias."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "8",
        "defaultRaw": 8,
        "name": "maxPoints",
        "description": "Number of distinct points per octant before it splits up."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "8",
        "defaultRaw": 8,
        "name": "maxDepth",
        "description": "The maximum tree depth level, starting at 0."
      }
    ]
  },
  {
    "__docId__": 146,
    "kind": "member",
    "name": "root",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#root",
    "access": "public",
    "description": "The root octant.",
    "lineNumber": 504,
    "type": {
      "nullable": null,
      "types": [
        "PointOctant"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "member",
    "name": "bias",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#bias",
    "access": "private",
    "description": "An octant boundary bias.\n\nThe octree is considered \"loose\" with a bias greater than 0.",
    "lineNumber": 515,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "maxPoints",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#maxPoints",
    "access": "private",
    "description": "Number of points per octant before a split occurs.\n\nThis value works together with the maximum depth as a secondary limiting\nfactor. Smaller values cause splits to occur earlier which results in a\nfaster and deeper tree growth.",
    "lineNumber": 528,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "maxDepth",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#maxDepth",
    "access": "private",
    "description": "The maximum tree depth level.\n\nIt's possible to use Infinity, but keep in mind that allowing infinitely\nsmall octants can have a severely negative impact on performance.\nFinding a value that works best for a specific scene is advisable.",
    "lineNumber": 541,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "pointCount",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#pointCount",
    "access": "public",
    "description": "The amount of points that are currently in this octree.",
    "lineNumber": 549,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "countPoints",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#countPoints",
    "access": "public",
    "description": "Counts how many points are in the given octant.",
    "lineNumber": 560,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "An octant."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The amount of points."
    }
  },
  {
    "__docId__": 152,
    "kind": "method",
    "name": "put",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#put",
    "access": "public",
    "description": "Puts a point into the octree.",
    "lineNumber": 574,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point. If it's already in the octree, the data entry will be updated."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "A data object that belongs to the point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the operation was successful."
    }
  },
  {
    "__docId__": 153,
    "kind": "method",
    "name": "remove",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#remove",
    "access": "public",
    "description": "Removes a point from the tree.",
    "lineNumber": 587,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the removed point or null if it didn't exist."
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "fetch",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#fetch",
    "access": "public",
    "description": "Retrieves the data of the specified point.",
    "lineNumber": 600,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry that is associated with the given point or null if it doesn't exist."
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "move",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#move",
    "access": "public",
    "description": "Moves an existing point to a new position. Has no effect if the point\ndoesn't exist.",
    "lineNumber": 615,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "The new position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The data entry of the updated point or null if it didn't exist."
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "findNearestPoint",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#findNearestPoint",
    "access": "public",
    "description": "Finds the closest point to the given one.",
    "lineNumber": 630,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "Infinity",
        "defaultRaw": "Infinity",
        "name": "maxDistance",
        "description": "An upper limit for the distance between the points."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object representing the nearest point or null if there is none. The object has a point and a data property."
    }
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "findPoints",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#findPoints",
    "access": "public",
    "description": "Finds points that are in the specified radius around the given position.",
    "lineNumber": 645,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "A position."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "A radius."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "skipSelf",
        "description": "Whether a point that is exactly at the given position should be skipped."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "An array of objects, each containing a point and a data property."
    }
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "raycast",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#raycast",
    "access": "public",
    "description": "Finds the points that intersect with the given ray.",
    "lineNumber": 663,
    "params": [
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "The raycaster."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "intersects",
        "description": "An array to be filled with the intersecting points."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RayPointIntersection[]"
      ],
      "spread": false,
      "description": "The intersecting points."
    }
  },
  {
    "__docId__": 159,
    "kind": "method",
    "name": "testPoints",
    "memberof": "src/points/PointOctree.js~PointOctree",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/PointOctree.js~PointOctree#testPoints",
    "access": "public",
    "description": "Collects points that intersect with the given ray.",
    "lineNumber": 686,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant[]"
        ],
        "spread": false,
        "optional": false,
        "name": "octants",
        "description": "An array containing octants that intersect with the ray."
      },
      {
        "nullable": null,
        "types": [
          "Raycaster"
        ],
        "spread": false,
        "optional": false,
        "name": "raycaster",
        "description": "The raycaster."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "intersects",
        "description": "An array to be filled with intersecting points."
      }
    ],
    "return": null
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/points/RayPointIntersection.js",
    "content": "/**\n * A collection of ray-point intersection data.\n */\n\nexport class RayPointIntersection {\n\n\t/**\n\t * Constructs new ray-point intersection data.\n\t *\n\t * @param {Number} distance - The distance from the origin of the ray to the point.\n\t * @param {Number} distanceToRay - The distance from the point to the ray.\n\t * @param {Vector3} point - The point.\n\t * @param {Object} [object=null] - The point's data.\n\t */\n\n\tconstructor(distance, distanceToRay, point, object = null) {\n\n\t\t/**\n\t\t * The distance from the origin of the ray to the point.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\n\t\tthis.distance = distance;\n\n\t\t/**\n\t\t * The shortest distance from the point to the ray.\n\t\t *\n\t\t * @type {Number}\n\t\t */\n\n\t\tthis.distanceToRay = distanceToRay;\n\n\t\t/**\n\t\t * The point.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\n\t\tthis.point = point;\n\n\t\t/**\n\t\t * The point's data.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\n\t\tthis.object = object;\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/points/RayPointIntersection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "class",
    "name": "RayPointIntersection",
    "memberof": "src/points/RayPointIntersection.js",
    "static": true,
    "longname": "src/points/RayPointIntersection.js~RayPointIntersection",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/points/RayPointIntersection.js",
    "importStyle": "{RayPointIntersection}",
    "description": "A collection of ray-point intersection data.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 162,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/points/RayPointIntersection.js~RayPointIntersection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/points/RayPointIntersection.js~RayPointIntersection#constructor",
    "access": "public",
    "description": "Constructs new ray-point intersection data.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "distance",
        "description": "The distance from the origin of the ray to the point."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "distanceToRay",
        "description": "The distance from the point to the ray."
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "The point."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "object",
        "description": "The point's data."
      }
    ]
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "distance",
    "memberof": "src/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/points/RayPointIntersection.js~RayPointIntersection#distance",
    "access": "public",
    "description": "The distance from the origin of the ray to the point.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "distanceToRay",
    "memberof": "src/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/points/RayPointIntersection.js~RayPointIntersection#distanceToRay",
    "access": "public",
    "description": "The shortest distance from the point to the ray.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "point",
    "memberof": "src/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/points/RayPointIntersection.js~RayPointIntersection#point",
    "access": "public",
    "description": "The point.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "object",
    "memberof": "src/points/RayPointIntersection.js~RayPointIntersection",
    "static": false,
    "longname": "src/points/RayPointIntersection.js~RayPointIntersection#object",
    "access": "public",
    "description": "The point's data.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "file",
    "name": "src/points/index.js",
    "content": "/**\n * Point-oriented octree components.\n *\n * @module sparse-octree/points\n */\n\nexport { PointOctant } from \"./PointOctant.js\";\nexport { PointOctree } from \"./PointOctree.js\";\nexport { RayPointIntersection } from \"./RayPointIntersection.js\";\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/points/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/utils/OctreeUtils.js",
    "content": "import { Box3, Vector3 } from \"three\";\nimport { pattern } from \"../core/Octant.js\";\n\n/**\n * A box.\n *\n * @type {Box3}\n * @private\n * @final\n */\n\nconst b = new Box3();\n\n/**\n * A vector.\n *\n * @type {Vector3}\n * @private\n * @final\n */\n\nconst c = new Vector3();\n\n/**\n * A vector.\n *\n * @type {Vector3}\n * @private\n * @final\n */\n\nconst u = new Vector3();\n\n/**\n * A vector.\n *\n * @type {Vector3}\n * @private\n * @final\n */\n\nconst v = new Vector3();\n\n/**\n * A collection of octree utility functions.\n */\n\nexport class OctreeUtils {\n\n\t/**\n\t * Integrates octants into a parent octant.\n\t *\n\t * @param {Octant} octant - The parent octant.\n\t * @param {Octant[]} octants - A list of potential child octants. Will be used destructively.\n\t */\n\n\tstatic recycleOctants(octant, octants) {\n\n\t\tconst min = octant.min;\n\t\tconst mid = octant.getCenter(u);\n\t\tconst halfDimensions = octant.getDimensions(v).multiplyScalar(0.5);\n\n\t\tconst children = octant.children;\n\t\tconst l = octants.length;\n\n\t\tlet i, j;\n\t\tlet combination, candidate;\n\n\t\tfor(i = 0; i < 8; ++i) {\n\n\t\t\tcombination = pattern[i];\n\n\t\t\tb.min.addVectors(min, c.fromArray(combination).multiply(halfDimensions));\n\t\t\tb.max.addVectors(mid, c.fromArray(combination).multiply(halfDimensions));\n\n\t\t\t// Find an octant that matches the current combination.\n\t\t\tfor(j = 0; j < l; ++j) {\n\n\t\t\t\tcandidate = octants[j];\n\n\t\t\t\tif(candidate !== null && b.min.equals(candidate.min) && b.max.equals(candidate.max)) {\n\n\t\t\t\t\tchildren[i] = candidate;\n\t\t\t\t\toctants[j] = null;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/utils/OctreeUtils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "variable",
    "name": "b",
    "memberof": "src/utils/OctreeUtils.js",
    "static": true,
    "longname": "src/utils/OctreeUtils.js~b",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/utils/OctreeUtils.js",
    "importStyle": null,
    "description": "A box.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "c",
    "memberof": "src/utils/OctreeUtils.js",
    "static": true,
    "longname": "src/utils/OctreeUtils.js~c",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/utils/OctreeUtils.js",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 171,
    "kind": "variable",
    "name": "u",
    "memberof": "src/utils/OctreeUtils.js",
    "static": true,
    "longname": "src/utils/OctreeUtils.js~u",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/utils/OctreeUtils.js",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 172,
    "kind": "variable",
    "name": "v",
    "memberof": "src/utils/OctreeUtils.js",
    "static": true,
    "longname": "src/utils/OctreeUtils.js~v",
    "access": "private",
    "export": false,
    "importPath": "sparse-octree/src/utils/OctreeUtils.js",
    "importStyle": null,
    "description": "A vector.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@final",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 173,
    "kind": "class",
    "name": "OctreeUtils",
    "memberof": "src/utils/OctreeUtils.js",
    "static": true,
    "longname": "src/utils/OctreeUtils.js~OctreeUtils",
    "access": "public",
    "export": true,
    "importPath": "sparse-octree/src/utils/OctreeUtils.js",
    "importStyle": "{OctreeUtils}",
    "description": "A collection of octree utility functions.",
    "lineNumber": 48,
    "interface": false
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "recycleOctants",
    "memberof": "src/utils/OctreeUtils.js~OctreeUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/OctreeUtils.js~OctreeUtils.recycleOctants",
    "access": "public",
    "description": "Integrates octants into a parent octant.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Octant"
        ],
        "spread": false,
        "optional": false,
        "name": "octant",
        "description": "The parent octant."
      },
      {
        "nullable": null,
        "types": [
          "Octant[]"
        ],
        "spread": false,
        "optional": false,
        "name": "octants",
        "description": "A list of potential child octants. Will be used destructively."
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "file",
    "name": "src/utils/index.js",
    "content": "/**\n * Octree utilities.\n *\n * @module sparse-octree/utils\n */\n\nexport { OctreeUtils } from \"./OctreeUtils.js\";\n",
    "static": true,
    "longname": "/home/hcampos/pix4d/sparse-octree/src/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# Sparse Octree\n\n[![Build status](https://travis-ci.org/vanruesc/sparse-octree.svg?branch=master)](https://travis-ci.org/vanruesc/sparse-octree) \n[![npm version](https://badge.fury.io/js/sparse-octree.svg)](http://badge.fury.io/js/sparse-octree) \n[![Peer dependencies](https://david-dm.org/vanruesc/sparse-octree/peer-status.svg)](https://david-dm.org/vanruesc/sparse-octree?type=peer)\n\nA sparse octree data structure.\n\n*[Extensive Demo](https://vanruesc.github.io/sparse-octree/public/demo) &there4;\n[API Reference](https://vanruesc.github.io/sparse-octree/public/docs)*\n\n\n## Usage\n\n##### Custom Octrees\n\n```javascript\nimport { Octree, CubicOctant } from \"sparse-octree\";\n\nexport class CubicOctree extends Octree {\n\n\tconstructor(min, size) {\n\n\t\tthis.root = new CubicOctant(min, size);\n\n\t}\n\n}\n```\n\n##### Points\n\n```javascript\nimport { Vector3 } from \"math-ds\";\nimport { PointOctree } from \"sparse-octree\";\n\nconst min = new Vector3(-1, -1, -1);\nconst max = new Vector3(1, 1, 1);\n\nconst octree = new PointOctree(min, max);\nconst myData = {};\n\noctree.put(new Vector3(0, 0, 0), myData);\noctree.fetch(new Vector3(0, 0, 0)); // => myData\n```\n\nA full point octree example can be found [here](https://jsfiddle.net/6gt9fjmq/10/).\n\n\n## Features\n\n- Base Functionality\n\t- Pointer-based structure\n  - Handles octant splitting\n  - Adheres to a [common octant layout](http://vanruesc.github.io/sparse-octree/public/docs/variable/index.html#static-variable-pattern)\n  - Supports raycasting\n  - Supports culling\n  - Supports cubic octrees\n  - Can be extended to manage any data\n- Provides a point management implementation\n\n\n## Octree Helper\n\nThe [octree-helper](https://github.com/vanruesc/octree-helper) module provides\nan octree visualisation tool for [three.js](https://threejs.org/).\n\n\n## Contributing\n\nMaintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code.\n",
    "longname": "/home/hcampos/pix4d/sparse-octree/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n\t\"name\": \"sparse-octree\",\n\t\"version\": \"5.0.1\",\n\t\"description\": \"A sparse octree data structure.\",\n\t\"homepage\": \"https://github.com/vanruesc/sparse-octree\",\n\t\"main\": \"build/sparse-octree.js\",\n\t\"typings\": \"src/typings.d.ts\",\n\t\"sideEffects\": false,\n\t\"license\": \"Zlib\",\n\n\t\"keywords\": [\n\t\t\"partition\",\n\t\t\"hierarchy\",\n\t\t\"subdivision\",\n\t\t\"raycasting\",\n\t\t\"3d\",\n\t\t\"spatial\",\n\t\t\"voxel\",\n\t\t\"points\",\n\t\t\"frustum\",\n\t\t\"culling\"\n\t],\n\n\t\"author\": {\n\t\t\"name\": \"Raoul van Rüschen\",\n\t\t\"email\": \"vanruesc@outlook.de\"\n\t},\n\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/vanruesc/sparse-octree.git\"\n\t},\n\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/vanruesc/sparse-octree/issues\"\n\t},\n\n\t\"files\": [\n\t\t\"src\",\n\t\t\"build\"\n\t],\n\n\t\"scripts\": {\n\t\t\"lint\": \"yarn run lint:lib && yarn run lint:demo && yarn run lint:test\",\n\t\t\"lint:config\": \"eslint *.js\",\n\t\t\"lint:lib\": \"eslint src\",\n\t\t\"lint:demo\": \"eslint demo/src\",\n\t\t\"lint:test\": \"eslint test\",\n\t\t\"build\": \"rollup -c\",\n\t\t\"build:production\": \"cross-env NODE_ENV=production rollup -c\",\n\t\t\"doc\": \"esdoc\",\n\t\t\"deploy\": \"cpx demo/assets/** public/demo\",\n\t\t\"test\": \"ava\",\n\t\t\"prepack\": \"yarn run lint && yarn run build:production\"\n\t},\n\n\t\"engines\": {\n\t\t\"node\": \">=4.0.0\",\n\t\t\"npm\": \">=4.0.0\"\n\t},\n\n\t\"ava\": {\n\t\t\"failFast\": true,\n\t\t\"files\": [\"test/**/*.js\"]\n\t},\n\n\t\"eslintConfig\": {\n\t\t\"extends\": \"delta\"\n\t},\n\n\t\"dependencies\": {\n\t\t\"iterator-result\": \"0.x.x\"\n\t},\n\n\t\"devDependencies\": {\n\t\t\"ava\": \"0.x.x\",\n\t\t\"babel-core\": \"6.x.x\",\n\t\t\"babel-plugin-external-helpers\": \"6.x.x\",\n\t\t\"babel-preset-env\": \"1.x.x\",\n\t\t\"cpx\": \"1.x.x\",\n\t\t\"cross-env\": \"5.x.x\",\n\t\t\"delta-controls\": \"2.x.x\",\n\t\t\"esdoc\": \"1.x.x\",\n\t\t\"esdoc-standard-plugin\": \"1.x.x\",\n\t\t\"eslint\": \"5.x.x\",\n\t\t\"eslint-config-delta\": \"0.x.x\",\n\t\t\"iterator-result\": \"0.x.x\",\n\t\t\"octree-helper\": \"0.x.x\",\n\t\t\"rollup\": \"0.x.x\",\n\t\t\"rollup-plugin-babel\": \"3.x.x\",\n\t\t\"rollup-plugin-babel-minify\": \"5.x.x\",\n\t\t\"rollup-plugin-node-resolve\": \"3.x.x\",\n\t\t\"rollup-plugin-string\": \"2.x.x\",\n\t\t\"synthetic-event\": \"0.x.x\",\n\t\t\"three\": \"0.94.x\",\n\t\t\"three-demo\": \"2.x.x\"\n\t}\n}\n",
    "longname": "/home/hcampos/pix4d/sparse-octree/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]