/**
 * sparse-octree v4.2.0 build Dec 19 2017
 * https://github.com/vanruesc/sparse-octree
 * Copyright 2017 Raoul van RÃ¼schen, Zlib
 */

!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?i(exports):"function"==typeof define&&define.amd?define(["exports"],i):i(t.SPARSEOCTREE={})}(this,function(t){"use strict";function i(t,i,e){return Math.max(Math.min(t,e),i)}function e(t,i,e,n){var s=void 0,r=0;return i<e?(s=i,r=0):(s=e,r=1),n<s&&(r=2),ht[t][r]}function n(t,i,s,r,a,h,o,u,l){var c=t.children,y=void 0,v=void 0,d=void 0,f=void 0;if(a>=0&&h>=0&&o>=0)if(null===c)l.push(t);else{y=function(t,i,e,n,s,r){var a=0;return t>i&&t>e?(s<t&&(a|=2),r<t&&(a|=1)):i>e?(n<i&&(a|=4),r<i&&(a|=1)):(n<e&&(a|=4),s<e&&(a|=2)),a}(i,s,r,v=.5*(i+a),d=.5*(s+h),f=.5*(r+o));do{switch(y){case 0:n(c[ot],i,s,r,v,d,f,u,l),y=e(y,v,d,f);break;case 1:n(c[1^ot],i,s,f,v,d,o,u,l),y=e(y,v,d,o);break;case 2:n(c[2^ot],i,d,r,v,h,f,u,l),y=e(y,v,h,f);break;case 3:n(c[3^ot],i,d,f,v,h,o,u,l),y=e(y,v,h,o);break;case 4:n(c[4^ot],v,s,r,a,d,f,u,l),y=e(y,a,d,f);break;case 5:n(c[5^ot],v,s,f,a,d,o,u,l),y=e(y,a,d,o);break;case 6:n(c[6^ot],v,d,r,a,h,f,u,l),y=e(y,a,h,f);break;case 7:n(c[7^ot],v,d,f,a,h,o,u,l),y=8}}while(y<8)}}function s(t){var i=t.children,e=0,n=void 0,r=void 0,a=void 0;if(null!==i)for(n=0,r=i.length;n<r;++n)(a=1+s(i[n]))>e&&(e=a);return e}function r(t,i,e){var n=t.children,s=void 0,a=void 0;if(lt.min=t.min,lt.max=t.max,i.intersectsBox(lt))if(null!==n)for(s=0,a=n.length;s<a;++s)r(n[s],i,e);else e.push(t)}function a(t,i,e,n){var s=t.children,r=void 0,h=void 0;if(e===i)n.push(t);else if(null!==s)for(++e,r=0,h=s.length;r<h;++r)a(s[r],i,e,n)}function h(t){var i=t.children,e=0,n=void 0,s=void 0;if(null!==i)for(n=0,s=i.length;n<s;++n)e+=h(i[n]);else null!==t.points&&(e=t.points.length);return e}function o(t,i,e,n,s){var r=n.children,a=!1,h=!1,u=void 0,l=void 0;if(n.contains(t,e.bias)){if(null===r){if(null===n.points)n.points=[],n.data=[];else for(u=0,l=n.points.length;!a&&u<l;++u)a=n.points[u].equals(t);a?(n.data[u-1]=i,h=!0):n.points.length<e.maxPoints||s===e.maxDepth?(n.points.push(t.clone()),n.data.push(i),++e.pointCount,h=!0):(n.split(),n.redistribute(e.bias),r=n.children)}if(null!==r)for(++s,u=0,l=r.length;!h&&u<l;++u)h=o(t,i,e,r[u],s)}return h}function u(t,i,e,n){var s=e.children,r=null,a=void 0,o=void 0,l=void 0,c=void 0,y=void 0;if(e.contains(t,i.bias))if(null!==s)for(a=0,o=s.length;null===r&&a<o;++a)r=u(t,i,s[a],e);else if(null!==e.points)for(l=e.points,c=e.data,a=0,o=l.length;a<o;++a)if(l[a].equals(t)){y=o-1,r=c[a],a<y&&(l[a]=l[y],c[a]=c[y]),l.pop(),c.pop(),--i.pointCount,null!==n&&h(n)<=i.maxPoints&&n.merge();break}return r}function l(t,i,e){var n=e.children,s=null,r=void 0,a=void 0,h=void 0;if(e.contains(t,i.bias))if(null!==n)for(r=0,a=n.length;null===s&&r<a;++r)s=l(t,i,n[r]);else for(r=0,a=(h=e.points).length;null===s&&r<a;++r)t.distanceToSquared(h[r])<=ft&&(s=e.data[r]);return s}function c(t,i,e,n,s,r){var a=n.children,h=null,l=void 0,y=void 0,v=void 0;if(n.contains(t,e.bias))if(n.contains(i,e.bias)){if(null!==a)for(++r,l=0,y=a.length;null===h&&l<y;++l)h=c(t,i,e,a[l],n,r);else for(l=0,y=(v=n.points).length;l<y;++l)if(t.distanceToSquared(v[l])<=ft){v[l].copy(i),h=n.data[l];break}}else o(i,h=u(t,e,n,s),e,s,r-1);return h}function y(t,i,e,n){var s=n.points,r=n.children,a=null,h=i,o=void 0,u=void 0,l=void 0,c=void 0,v=void 0,d=void 0,f=void 0;if(null!==r)for(o=0,u=(v=r.map(function(i){return{octant:i,distance:i.distanceToCenterSquared(t)}}).sort(function(t,i){return t.distance-i.distance})).length;o<u;++o)(d=v[o].octant).contains(t,h)&&null!==(f=y(t,h,e,d))&&(c=f.point.distanceToSquared(t),(!e||c>0)&&c<h&&(h=c,a=f));else if(null!==s)for(o=0,u=s.length;o<u;++o)l=s[o],c=t.distanceToSquared(l),(!e||c>0)&&c<h&&(h=c,a={point:l.clone(),data:n.data[o]});return a}function v(t,i,e,n,s){var r=n.points,a=n.children,h=i*i,o=void 0,u=void 0,l=void 0,c=void 0,y=void 0;if(null!==a)for(o=0,u=a.length;o<u;++o)(y=a[o]).contains(t,i)&&v(t,i,e,y,s);else if(null!==r)for(o=0,u=r.length;o<u;++o)l=r[o],c=t.distanceToSquared(l),(!e||c>0)&&c<=h&&s.push({point:l.clone(),data:n.data[o]})}var d=function(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")},f=function(){function t(t,i){for(var e=0;e<i.length;e++){var n=i[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(i,e,n){return e&&t(i.prototype,e),n&&t(i,n),i}}(),m=function(t,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+typeof i);t.prototype=Object.create(i&&i.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(t,i):t.__proto__=i)},x=function(t,i){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!=typeof i&&"function"!=typeof i?t:i},k=function(t){if(Array.isArray(t)){for(var i=0,e=Array(t.length);i<t.length;i++)e[i]=t[i];return e}return Array.from(t)},p=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;d(this,t),this.x=i,this.y=e,this.z=n}return f(t,[{key:"set",value:function(t,i,e){return this.x=t,this.y=i,this.z=e,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t}},{key:"setFromSpherical",value:function(t){var i=Math.sin(t.phi)*t.radius;return this.x=i*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=i*Math.cos(t.theta),this}},{key:"setFromCylindrical",value:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this}},{key:"setFromMatrixColumn",value:function(t,i){return this.fromArray(t.elements,4*i)}},{key:"setFromMatrixPosition",value:function(t){var i=t.elements;return this.x=i[12],this.y=i[13],this.z=i[14],this}},{key:"setFromMatrixScale",value:function(t){var i=this.setFromMatrixColumn(t,0).length(),e=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=e,this.z=n,this}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}},{key:"addScalar",value:function(t){return this.x+=t,this.y+=t,this.z+=t,this}},{key:"addVectors",value:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this}},{key:"addScaledVector",value:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this}},{key:"sub",value:function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}},{key:"subScalar",value:function(t){return this.x-=t,this.y-=t,this.z-=t,this}},{key:"subVectors",value:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this}},{key:"multiply",value:function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}},{key:"multiplyScalar",value:function(t){return this.x*=t,this.y*=t,this.z*=t,this}},{key:"multiplyVectors",value:function(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this}},{key:"divide",value:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}},{key:"divideScalar",value:function(t){return this.x/=t,this.y/=t,this.z/=t,this}},{key:"crossVectors",value:function(t,i){var e=t.x,n=t.y,s=t.z,r=i.x,a=i.y,h=i.z;return this.x=n*h-s*a,this.y=s*r-e*h,this.z=e*a-n*r,this}},{key:"cross",value:function(t){return this.crossVectors(this,t)}},{key:"transformDirection",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.elements;return this.x=s[0]*i+s[4]*e+s[8]*n,this.y=s[1]*i+s[5]*e+s[9]*n,this.z=s[2]*i+s[6]*e+s[10]*n,this.normalize()}},{key:"applyMatrix3",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.elements;return this.x=s[0]*i+s[3]*e+s[6]*n,this.y=s[1]*i+s[4]*e+s[7]*n,this.z=s[2]*i+s[5]*e+s[8]*n,this}},{key:"applyMatrix4",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.elements;return this.x=s[0]*i+s[4]*e+s[8]*n+s[12],this.y=s[1]*i+s[5]*e+s[9]*n+s[13],this.z=s[2]*i+s[6]*e+s[10]*n+s[14],this}},{key:"applyQuaternion",value:function(t){var i=this.x,e=this.y,n=this.z,s=t.x,r=t.y,a=t.z,h=t.w,o=h*i+r*n-a*e,u=h*e+a*i-s*n,l=h*n+s*e-r*i,c=-s*i-r*e-a*n;return this.x=o*h+c*-s+u*-a-l*-r,this.y=u*h+c*-r+l*-s-o*-a,this.z=l*h+c*-a+o*-r-u*-s,this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y+this.z*t.z}},{key:"reflect",value:function(i){arguments.length>1&&void 0!==arguments[1]?arguments[1]:new t;var e=i.x,n=i.y,s=i.z;return this.sub(i.multiplyScalar(2*this.dot(i))),i.set(e,n,s),this}},{key:"angleTo",value:function(t){var i=this.dot(t)/Math.sqrt(this.lengthSquared()*t.lengthSquared());return Math.acos(Math.min(Math.max(i,-1),1))}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanDistanceTo",value:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}},{key:"distanceToSquared",value:function(t){var i=this.x-t.x,e=this.y-t.y,n=this.z-t.z;return i*i+e*e+n*n}},{key:"distanceTo",value:function(t){return Math.sqrt(this.distanceToSquared(t))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(t){return this.normalize().multiplyScalar(t)}},{key:"min",value:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}},{key:"max",value:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}},{key:"clamp",value:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"lerp",value:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this}},{key:"lerpVectors",value:function(t,i,e){return this.subVectors(i,t).multiplyScalar(e).add(t)}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}}]),t}(),z=new p,g=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p(1/0,1/0,1/0),e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p(-1/0,-1/0,-1/0);d(this,t),this.min=i,this.max=e}return f(t,[{key:"set",value:function(t,i){return this.min.copy(t),this.max.copy(i),this}},{key:"copy",value:function(t){return this.min.copy(t.min),this.max.copy(t.max),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p;return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}},{key:"getBoundingSphere",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new M;return this.getCenter(t.center),t.radius=.5*this.getSize(z).length(),t}},{key:"expandByPoint",value:function(t){return this.min.min(t),this.max.max(t),this}},{key:"expandByVector",value:function(t){return this.min.sub(t),this.max.add(t),this}},{key:"expandByScalar",value:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this}},{key:"setFromPoints",value:function(t){var i=void 0,e=void 0;for(this.min.set(0,0,0),this.max.set(0,0,0),i=0,e=t.length;i<e;++i)this.expandByPoint(t[i]);return this}},{key:"setFromCenterAndSize",value:function(t,i){var e=z.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}},{key:"clampPoint",value:function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p).copy(t).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(t){return z.copy(t).clamp(this.min,this.max).sub(t).length()}},{key:"translate",value:function(t){return this.min.add(t),this.max.add(t),this}},{key:"intersect",value:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(t){return this.min.min(t.min),this.max.max(t.max),this}},{key:"containsPoint",value:function(t){var i=this.min,e=this.max;return t.x>=i.x&&t.y>=i.y&&t.z>=i.z&&t.x<=e.x&&t.y<=e.y&&t.z<=e.z}},{key:"containsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return i.x<=n.x&&s.x<=e.x&&i.y<=n.y&&s.y<=e.y&&i.z<=n.z&&s.z<=e.z}},{key:"intersectsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return s.x>=i.x&&s.y>=i.y&&s.z>=i.z&&n.x<=e.x&&n.y<=e.y&&n.z<=e.z}},{key:"intersectsSphere",value:function(t){return this.clampPoint(t.center,z).distanceToSquared(t.center)<=t.radius*t.radius}},{key:"intersectsPlane",value:function(t){var i=void 0,e=void 0;return t.normal.x>0?(i=t.normal.x*this.min.x,e=t.normal.x*this.max.x):(i=t.normal.x*this.max.x,e=t.normal.x*this.min.x),t.normal.y>0?(i+=t.normal.y*this.min.y,e+=t.normal.y*this.max.y):(i+=t.normal.y*this.max.y,e+=t.normal.y*this.min.y),t.normal.z>0?(i+=t.normal.z*this.min.z,e+=t.normal.z*this.max.z):(i+=t.normal.z*this.max.z,e+=t.normal.z*this.min.z),i<=t.constant&&e>=t.constant}},{key:"equals",value:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}]),t}(),w=new g,M=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;d(this,t),this.center=i,this.radius=e}return f(t,[{key:"set",value:function(t,i){return this.center.copy(t),this.radius=i,this}},{key:"copy",value:function(t){return this.center.copy(t.center),this.radius=t.radius,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromPoints",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:w.setFromPoints(t).getCenter(this.center),e=0,n=void 0,s=void 0;for(n=0,s=t.length;n<s;++n)e=Math.max(e,i.distanceToSquared(t[n]));return this.radius=Math.sqrt(e),this}},{key:"getBoundingBox",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new g;return t.set(this.center,this.center),t.expandByScalar(this.radius),t}},{key:"isEmpty",value:function(){return this.radius<=0}},{key:"translate",value:function(t){return this.center.add(t),this}},{key:"clampPoint",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p,e=this.center.distanceToSquared(t);return i.copy(t),e>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i}},{key:"distanceToPoint",value:function(t){return t.distanceTo(this.center)-this.radius}},{key:"containsPoint",value:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"intersectsSphere",value:function(t){var i=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=i*i}},{key:"intersectsBox",value:function(t){return t.intersectsSphere(this)}},{key:"intersectsPlane",value:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}},{key:"equals",value:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}]),t}(),b=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;d(this,t),this.x=i,this.y=e}return f(t,[{key:"set",value:function(t,i){return this.x=t,this.y=i,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this}},{key:"addScalar",value:function(t){return this.x+=t,this.y+=t,this}},{key:"addVectors",value:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this}},{key:"addScaledVector",value:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this}},{key:"sub",value:function(t){return this.x-=t.x,this.y-=t.y,this}},{key:"subScalar",value:function(t){return this.x-=t,this.y-=t,this}},{key:"subVectors",value:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this}},{key:"multiply",value:function(t){return this.x*=t.x,this.y*=t.y,this}},{key:"multiplyScalar",value:function(t){return this.x*=t,this.y*=t,this}},{key:"divide",value:function(t){return this.x/=t.x,this.y/=t.y,this}},{key:"divideScalar",value:function(t){return this.x/=t,this.y/=t,this}},{key:"applyMatrix3",value:function(t){var i=this.x,e=this.y,n=t.elements;return this.x=n[0]*i+n[3]*e+n[6],this.y=n[1]*i+n[4]*e+n[7],this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"manhattanDistanceTo",value:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}},{key:"distanceToSquared",value:function(t){var i=this.x-t.x,e=this.y-t.y;return i*i+e*e}},{key:"distanceTo",value:function(t){return Math.sqrt(this.distanceToSquared(t))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(t){return this.normalize().multiplyScalar(t)}},{key:"min",value:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}},{key:"max",value:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}},{key:"clamp",value:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"angle",value:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t}},{key:"lerp",value:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this}},{key:"lerpVectors",value:function(t,i,e){return this.subVectors(i,t).multiplyScalar(e).add(t)}},{key:"rotateAround",value:function(t,i){var e=Math.cos(i),n=Math.sin(i),s=this.x-t.x,r=this.y-t.y;return this.x=s*e-r*n+t.x,this.y=s*n+r*e+t.y,this}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y}},{key:"width",get:function(){return this.x},set:function(t){return this.x=t}},{key:"height",get:function(){return this.y},set:function(t){return this.y=t}}]),t}(),S=new b,q=(function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new b(1/0,1/0),e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new b(-1/0,-1/0);d(this,t),this.min=i,this.max=e}f(t,[{key:"set",value:function(t,i){return this.min.copy(t),this.max.copy(i),this}},{key:"copy",value:function(t){return this.min.copy(t.min),this.max.copy(t.max),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:"getCenter",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new b;return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new b;return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}},{key:"getBoundingSphere",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new M;return this.getCenter(t.center),t.radius=.5*this.getSize(S).length(),t}},{key:"expandByPoint",value:function(t){return this.min.min(t),this.max.max(t),this}},{key:"expandByVector",value:function(t){return this.min.sub(t),this.max.add(t),this}},{key:"expandByScalar",value:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this}},{key:"setFromPoints",value:function(t){var i=void 0,e=void 0;for(this.min.set(0,0),this.max.set(0,0),i=0,e=t.length;i<e;++i)this.expandByPoint(t[i]);return this}},{key:"setFromCenterAndSize",value:function(t,i){var e=S.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(e),this.max.copy(t).add(e),this}},{key:"clampPoint",value:function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new b).copy(t).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(t){return S.copy(t).clamp(this.min,this.max).sub(t).length()}},{key:"translate",value:function(t){return this.min.add(t),this.max.add(t),this}},{key:"intersect",value:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(t){return this.min.min(t.min),this.max.max(t.max),this}},{key:"containsPoint",value:function(t){var i=this.min,e=this.max;return t.x>=i.x&&t.y>=i.y&&t.x<=e.x&&t.y<=e.y}},{key:"containsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return i.x<=n.x&&s.x<=e.x&&i.y<=n.y&&s.y<=e.y}},{key:"intersectsBox",value:function(t){var i=this.min,e=this.max,n=t.min,s=t.max;return s.x>=i.x&&s.y>=i.y&&n.x<=e.x&&n.y<=e.y}},{key:"equals",value:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}])}(),function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;d(this,t),this.radius=i,this.theta=e,this.y=n}f(t,[{key:"set",value:function(t,i,e){return this.radius=t,this.theta=i,this.y=e,this}},{key:"copy",value:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromVector3",value:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}}])}(),function(){function t(){d(this,t),this.elements=new Float32Array([1,0,0,0,1,0,0,0,1])}return f(t,[{key:"set",value:function(t,i,e,n,s,r,a,h,o){var u=this.elements;return u[0]=t,u[3]=i,u[6]=e,u[1]=n,u[4]=s,u[7]=r,u[2]=a,u[5]=h,u[8]=o,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(t){var i=t.elements,e=this.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<9;++n)e[n]=t[n+i];return this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<9;++n)t[n+i]=e[n];return t}},{key:"multiplyMatrices",value:function(t,i){var e=t.elements,n=i.elements,s=this.elements,r=e[0],a=e[3],h=e[6],o=e[1],u=e[4],l=e[7],c=e[2],y=e[5],v=e[8],d=n[0],f=n[3],m=n[6],x=n[1],k=n[4],p=n[7],z=n[2],g=n[5],w=n[8];return s[0]=r*d+a*x+h*z,s[3]=r*f+a*k+h*g,s[6]=r*m+a*p+h*w,s[1]=o*d+u*x+l*z,s[4]=o*f+u*k+l*g,s[7]=o*m+u*p+l*w,s[2]=c*d+y*x+v*z,s[5]=c*f+y*k+v*g,s[8]=c*m+y*p+v*w,this}},{key:"multiply",value:function(t){return this.multiplyMatrices(this,t)}},{key:"premultiply",value:function(t){return this.multiplyMatrices(t,this)}},{key:"multiplyScalar",value:function(t){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=t,i[4]*=t,i[7]*=t,i[2]*=t,i[5]*=t,i[8]*=t,this}},{key:"determinant",value:function(){var t=this.elements,i=t[0],e=t[1],n=t[2],s=t[3],r=t[4],a=t[5],h=t[6],o=t[7],u=t[8];return i*r*u-i*a*o-e*s*u+e*a*h+n*s*o-n*r*h}},{key:"getInverse",value:function(t){var i=t.elements,e=this.elements,n=i[0],s=i[1],r=i[2],a=i[3],h=i[4],o=i[5],u=i[6],l=i[7],c=i[8],y=c*h-o*l,v=o*u-c*a,d=l*a-h*u,f=n*y+s*v+r*d,m=void 0;return 0!==f?(m=1/f,e[0]=y*m,e[1]=(r*l-c*s)*m,e[2]=(o*s-r*h)*m,e[3]=v*m,e[4]=(c*n-r*u)*m,e[5]=(r*a-o*n)*m,e[6]=d*m,e[7]=(s*u-l*n)*m,e[8]=(h*n-s*a)*m):(console.error("Can't invert matrix, determinant is zero",t),this.identity()),this}},{key:"transpose",value:function(){var t=this.elements,i=void 0;return i=t[1],t[1]=t[3],t[3]=i,i=t[2],t[2]=t[6],t[6]=i,i=t[5],t[5]=t[7],t[7]=i,this}},{key:"scale",value:function(t,i){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=i,e[4]*=i,e[7]*=i,this}},{key:"rotate",value:function(t){var i=Math.cos(t),e=Math.sin(t),n=this.elements,s=n[0],r=n[3],a=n[6],h=n[1],o=n[4],u=n[7];return n[0]=i*s+e*h,n[3]=i*r+e*o,n[6]=i*a+e*u,n[1]=-e*s+i*h,n[4]=-e*r+i*o,n[7]=-e*a+i*u,this}},{key:"translate",value:function(t,i){var e=this.elements;return e[0]+=t*e[2],e[3]+=t*e[5],e[6]+=t*e[8],e[1]+=i*e[2],e[4]+=i*e[5],e[7]+=i*e[8],this}},{key:"equals",value:function(t){var i=this.elements,e=t.elements,n=!0,s=void 0;for(s=0;n&&s<9;++s)i[s]!==e[s]&&(n=!1);return n}}]),t}()),P="XYZ",A="YZX",T="ZXY",V="XZY",C="YXZ",F="ZYX",O=new p,U=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;d(this,t),this.x=i,this.y=e,this.z=n,this.w=s}return f(t,[{key:"set",value:function(t,i,e,n){return this.x=t,this.y=i,this.z=e,this.w=n,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.w=t[i+3],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.w,t}},{key:"setFromEuler",value:function(t){var i=t.x,e=t.y,n=t.z,s=Math.cos,r=Math.sin,a=s(i/2),h=s(e/2),o=s(n/2),u=r(i/2),l=r(e/2),c=r(n/2);switch(t.order){case P:this.x=u*h*o+a*l*c,this.y=a*l*o-u*h*c,this.z=a*h*c+u*l*o,this.w=a*h*o-u*l*c;break;case C:this.x=u*h*o+a*l*c,this.y=a*l*o-u*h*c,this.z=a*h*c-u*l*o,this.w=a*h*o+u*l*c;break;case T:this.x=u*h*o-a*l*c,this.y=a*l*o+u*h*c,this.z=a*h*c+u*l*o,this.w=a*h*o-u*l*c;break;case F:this.x=u*h*o-a*l*c,this.y=a*l*o+u*h*c,this.z=a*h*c-u*l*o,this.w=a*h*o+u*l*c;break;case A:this.x=u*h*o+a*l*c,this.y=a*l*o+u*h*c,this.z=a*h*c-u*l*o,this.w=a*h*o-u*l*c;break;case V:this.x=u*h*o-a*l*c,this.y=a*l*o-u*h*c,this.z=a*h*c+u*l*o,this.w=a*h*o+u*l*c}return this}},{key:"setFromAxisAngle",value:function(t,i){var e=i/2,n=Math.sin(e);return this.x=t.x*n,this.y=t.y*n,this.z=t.z*n,this.w=Math.cos(e),this}},{key:"setFromRotationMatrix",value:function(t){var i=t.elements,e=i[0],n=i[4],s=i[8],r=i[1],a=i[5],h=i[9],o=i[2],u=i[6],l=i[10],c=e+a+l,y=void 0;return c>0?(y=.5/Math.sqrt(c+1),this.w=.25/y,this.x=(u-h)*y,this.y=(s-o)*y,this.z=(r-n)*y):e>a&&e>l?(y=2*Math.sqrt(1+e-a-l),this.w=(u-h)/y,this.x=.25*y,this.y=(n+r)/y,this.z=(s+o)/y):a>l?(y=2*Math.sqrt(1+a-e-l),this.w=(s-o)/y,this.x=(n+r)/y,this.y=.25*y,this.z=(h+u)/y):(y=2*Math.sqrt(1+l-e-a),this.w=(r-n)/y,this.x=(s+o)/y,this.y=(h+u)/y,this.z=.25*y),this}},{key:"setFromUnitVectors",value:function(t,i){var e=t.dot(i)+1;return e<1e-6?(e=0,Math.abs(t.x)>Math.abs(t.z)?O.set(-t.y,t.x,0):O.set(0,-t.z,t.y)):O.crossVectors(t,i),this.x=O.x,this.y=O.y,this.z=O.z,this.w=e,this.normalize()}},{key:"invert",value:function(){return this.conjugate().normalize()}},{key:"conjugate",value:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"normalize",value:function(){var t=this.length(),i=void 0;return 0===t?(this.x=0,this.y=0,this.z=0,this.w=1):(i=1/t,this.x=this.x*i,this.y=this.y*i,this.z=this.z*i,this.w=this.w*i),this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}},{key:"multiplyQuaternions",value:function(t,i){var e=t.x,n=t.y,s=t.z,r=t.w,a=i.x,h=i.y,o=i.z,u=i.w;return this.x=e*u+r*a+n*o-s*h,this.y=n*u+r*h+s*a-e*o,this.z=s*u+r*o+e*h-n*a,this.w=r*u-e*a-n*h-s*o,this}},{key:"multiply",value:function(t){return this.multiplyQuaternions(this,t)}},{key:"premultiply",value:function(t){return this.multiplyQuaternions(t,this)}},{key:"slerp",value:function(t,i){var e=this.x,n=this.y,s=this.z,r=this.w,a=void 0,h=void 0,o=void 0,u=void 0,l=void 0;if(1===i)this.copy(t);else if(i>0){if((a=r*t.w+e*t.x+n*t.y+s*t.z)<0?(this.w=-t.w,this.x=-t.x,this.y=-t.y,this.z=-t.z,a=-a):this.copy(t),a>=1)return this.w=r,this.x=e,this.y=n,this.z=s,this;if(h=Math.sqrt(1-a*a),Math.abs(h)<.001)return this.w=.5*(r+this.w),this.x=.5*(e+this.x),this.y=.5*(n+this.y),this.z=.5*(s+this.z),this;o=Math.atan2(h,a),u=Math.sin((1-i)*o)/h,l=Math.sin(i*o)/h,this.w=r*u+this.w*l,this.x=e*u+this.x*l,this.y=n*u+this.y*l,this.z=s*u+this.z*l}return this}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}}],[{key:"slerp",value:function(i,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new t,s=arguments[3];return n.copy(i).slerp(e,s)}},{key:"slerpFlat",value:function(t,i,e,n,s,r,a){var h=s[r],o=s[r+1],u=s[r+2],l=s[r+3],c=e[n],y=e[n+1],v=e[n+2],d=e[n+3],f=void 0,m=void 0,x=void 0,k=void 0,p=void 0,z=void 0,g=void 0,w=void 0;d===l&&c===h&&y===o&&v===u||(f=1-a,z=(k=c*h+y*o+v*u+d*l)>=0?1:-1,(p=1-k*k)>Number.EPSILON&&(x=Math.sqrt(p),g=Math.atan2(x,k*z),f=Math.sin(f*g)/x,a=Math.sin(a*g)/x),c=c*f+h*(w=a*z),y=y*f+o*w,v=v*f+u*w,d=d*f+l*w,f===1-a&&(c*=m=1/Math.sqrt(c*c+y*y+v*v+d*d),y*=m,v*=m,d*=m)),t[i]=c,t[i+1]=y,t[i+2]=v,t[i+3]=d}}]),t}(),B=new q,E=new U,R=(function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;d(this,t),this.x=i,this.y=e,this.z=n,this.order=t.defaultOrder}f(t,[{key:"set",value:function(t,i,e,n){return this.x=t,this.y=i,this.z=e,this.order=e,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.order=t.order,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.order)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.order=t[i+3],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.order,t}},{key:"toVector3",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p).set(this.x,this.y,this.z)}},{key:"setFromRotationMatrix",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.order,n=t.elements,s=n[0],r=n[4],a=n[8],h=n[1],o=n[5],u=n[9],l=n[2],c=n[6],y=n[10];switch(e){case P:this.y=Math.asin(i(a,-1,1)),Math.abs(a)<.99999?(this.x=Math.atan2(-u,y),this.z=Math.atan2(-r,s)):(this.x=Math.atan2(c,o),this.z=0);break;case C:this.x=Math.asin(-i(u,-1,1)),Math.abs(u)<.99999?(this.y=Math.atan2(a,y),this.z=Math.atan2(h,o)):(this.y=Math.atan2(-l,s),this.z=0);break;case T:this.x=Math.asin(i(c,-1,1)),Math.abs(c)<.99999?(this.y=Math.atan2(-l,y),this.z=Math.atan2(-r,o)):(this.y=0,this.z=Math.atan2(h,s));break;case F:this.y=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this.x=Math.atan2(c,y),this.z=Math.atan2(h,s)):(this.x=0,this.z=Math.atan2(-r,o));break;case A:this.z=Math.asin(i(h,-1,1)),Math.abs(h)<.99999?(this.x=Math.atan2(-u,o),this.y=Math.atan2(-l,s)):(this.x=0,this.y=Math.atan2(a,y));break;case V:this.z=Math.asin(-i(r,-1,1)),Math.abs(r)<.99999?(this.x=Math.atan2(c,o),this.y=Math.atan2(a,s)):(this.x=Math.atan2(-u,y),this.y=0)}return this.order=e,this}},{key:"setFromQuaternion",value:function(t,i){return B.makeRotationFromQuaternion(t),this.setFromRotationMatrix(B,i)}},{key:"setFromVector3",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.order;return this.set(t.x,t.y,t.z,i)}},{key:"reorder",value:function(t){return E.setFromEuler(this),this.setFromQuaternion(E,t)}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.order===this.order}}],[{key:"defaultOrder",get:function(){return P}}])}(),new p),_=new p,j=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p(1,0,0),e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;d(this,t),this.normal=i,this.constant=e}return f(t,[{key:"set",value:function(t,i){return this.normal.copy(t),this.constant=i,this}},{key:"setComponents",value:function(t,i,e,n){return this.normal.set(t,i,e),this.constant=n,this}},{key:"copy",value:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromNormalAndCoplanarPoint",value:function(t,i){return this.normal.copy(t),this.constant=-i.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(t,i,e){var n=R.subVectors(e,i).cross(_.subVectors(t,i)).normalize();return this.setFromNormalAndCoplanarPoint(n,R),this}},{key:"normalize",value:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}},{key:"negate",value:function(){return this.normal.negate(),this.constant=-this.constant,this}},{key:"distanceToPoint",value:function(t){return this.normal.dot(t)+this.constant}},{key:"distanceToSphere",value:function(t){return this.distanceToPoint(t.center)-t.radius}},{key:"projectPoint",value:function(t,i){return i.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}},{key:"coplanarPoint",value:function(t){return t.copy(this.normal).multiplyScalar(-this.constant)}},{key:"translate",value:function(t){return this.constant-=t.dot(this.normal),this}},{key:"intersectLine",value:function(t,i){var e=t.delta(R),n=this.normal.dot(e);if(0===n)0===this.distanceToPoint(t.start)&&i.copy(t.start);else{var s=-(t.start.dot(this.normal)+this.constant)/n;s>=0&&s<=1&&i.copy(e).multiplyScalar(s).add(t.start)}return i}},{key:"intersectsLine",value:function(t){var i=this.distanceToPoint(t.start),e=this.distanceToPoint(t.end);return i<0&&e>0||e<0&&i>0}},{key:"intersectsBox",value:function(t){return t.intersectsPlane(this)}},{key:"intersectsSphere",value:function(t){return t.intersectsPlane(this)}},{key:"equals",value:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}]),t}(),D=new p,L=new p,Q=(function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new j,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new j,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new j,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new j,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new j,a=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new j;d(this,t),this.planes=[i,e,n,s,r,a]}f(t,[{key:"set",value:function(t,i,e,n,s,r){var a=this.planes;return a[0].copy(t),a[1].copy(i),a[2].copy(e),a[3].copy(n),a[4].copy(s),a[5].copy(r),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(t){var i=this.planes,e=void 0;for(e=0;e<6;++e)i[e].copy(t.planes[e]);return this}},{key:"setFromMatrix",value:function(t){var i=this.planes,e=t.elements,n=e[0],s=e[1],r=e[2],a=e[3],h=e[4],o=e[5],u=e[6],l=e[7],c=e[8],y=e[9],v=e[10],d=e[11],f=e[12],m=e[13],x=e[14],k=e[15];return i[0].setComponents(a-n,l-h,d-c,k-f).normalize(),i[1].setComponents(a+n,l+h,d+c,k+f).normalize(),i[2].setComponents(a+s,l+o,d+y,k+m).normalize(),i[3].setComponents(a-s,l-o,d-y,k-m).normalize(),i[4].setComponents(a-r,l-u,d-v,k-x).normalize(),i[5].setComponents(a+r,l+u,d+v,k+x).normalize(),this}},{key:"intersectsSphere",value:function(t){var i=this.planes,e=t.center,n=-t.radius,s=!0,r=void 0;for(r=0;r<6;++r)if(i[r].distanceToPoint(e)<n){s=!1;break}return s}},{key:"intersectsBox",value:function(t){var i=this.planes,e=t.min,n=t.max,s=!0,r=void 0,a=void 0,h=void 0,o=void 0;for(r=0;r<6;++r)if(o=i[r],D.x=o.normal.x>0?e.x:n.x,L.x=o.normal.x>0?n.x:e.x,D.y=o.normal.y>0?e.y:n.y,L.y=o.normal.y>0?n.y:e.y,D.z=o.normal.z>0?e.z:n.z,L.z=o.normal.z>0?n.z:e.z,a=o.distanceToPoint(D),h=o.distanceToPoint(L),a<0&&h<0){s=!1;break}return s}},{key:"containsPoint",value:function(t){var i=this.planes,e=!0,n=void 0;for(n=0;n<6;++n)if(i[n].distanceToPoint(t)<0){e=!1;break}return e}}])}(),new p),I=new p,X=(function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p;d(this,t),this.start=i,this.end=e}f(t,[{key:"set",value:function(t,i){return this.start.copy(t),this.end.copy(i),this}},{key:"copy",value:function(t){return this.start.copy(t.start),this.end.copy(t.end),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"getCenter",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p).addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p).subVectors(this.end,this.start)}},{key:"lengthSquared",value:function(){return this.start.distanceToSquared(this.end)}},{key:"length",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(t,i){return this.delta(i).multiplyScalar(t).add(this.start)}},{key:"closestPointToPointParameter",value:function(t,i){Q.subVectors(t,this.start),I.subVectors(this.end,this.start);var e=I.dot(I),n=I.dot(Q);return i?Math.min(Math.max(n/e,0),1):n/e}},{key:"closestPointToPoint",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]&&arguments[1],e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new p,n=this.closestPointToPointParameter(t,i);return this.delta(e).multiplyScalar(n).add(this.start)}},{key:"equals",value:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}])}(),new p),Y=new p,Z=new p,N=(function(){function t(){d(this,t),this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])}f(t,[{key:"set",value:function(t,i,e,n,s,r,a,h,o,u,l,c,y,v,d,f){var m=this.elements;return m[0]=t,m[4]=i,m[8]=e,m[12]=n,m[1]=s,m[5]=r,m[9]=a,m[13]=h,m[2]=o,m[6]=u,m[10]=l,m[14]=c,m[3]=y,m[7]=v,m[11]=d,m[15]=f,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"copy",value:function(t){var i=t.elements,e=this.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<16;++n)e[n]=t[n+i];return this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=this.elements,n=void 0;for(n=0;n<16;++n)t[n+i]=e[n];return t}},{key:"getMaxScaleOnAxis",value:function(){var t=this.elements,i=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],e=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(i,e,n))}},{key:"copyPosition",value:function(t){var i=this.elements,e=t.elements;return i[12]=e[12],i[13]=e[13],i[14]=e[14],this}},{key:"setPosition",value:function(t){var i=this.elements;return i[12]=t.x,i[13]=t.y,i[14]=t.z,this}},{key:"extractBasis",value:function(t,i,e){return t.setFromMatrixColumn(this,0),i.setFromMatrixColumn(this,1),e.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(t,i,e){return this.set(t.x,i.x,e.x,0,t.y,i.y,e.y,0,t.z,i.z,e.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(t){var i=this.elements,e=t.elements,n=1/X.setFromMatrixColumn(t,0).length(),s=1/X.setFromMatrixColumn(t,1).length(),r=1/X.setFromMatrixColumn(t,2).length();return i[0]=e[0]*n,i[1]=e[1]*n,i[2]=e[2]*n,i[4]=e[4]*s,i[5]=e[5]*s,i[6]=e[6]*s,i[8]=e[8]*r,i[9]=e[9]*r,i[10]=e[10]*r,this}},{key:"makeRotationFromEuler",value:function(t){var i=this.elements,e=t.x,n=t.y,s=t.z,r=Math.cos(e),a=Math.sin(e),h=Math.cos(n),o=Math.sin(n),u=Math.cos(s),l=Math.sin(s),c=void 0,y=void 0,v=void 0,d=void 0,f=void 0,m=void 0,x=void 0,k=void 0,p=void 0,z=void 0,g=void 0,w=void 0;switch(t.order){case P:c=r*u,y=r*l,v=a*u,d=a*l,i[0]=h*u,i[4]=-h*l,i[8]=o,i[1]=y+v*o,i[5]=c-d*o,i[9]=-a*h,i[2]=d-c*o,i[6]=v+y*o,i[10]=r*h;break;case C:f=h*u,m=h*l,x=o*u,k=o*l,i[0]=f+k*a,i[4]=x*a-m,i[8]=r*o,i[1]=r*l,i[5]=r*u,i[9]=-a,i[2]=m*a-x,i[6]=k+f*a,i[10]=r*h;break;case T:f=h*u,m=h*l,x=o*u,k=o*l,i[0]=f-k*a,i[4]=-r*l,i[8]=x+m*a,i[1]=m+x*a,i[5]=r*u,i[9]=k-f*a,i[2]=-r*o,i[6]=a,i[10]=r*h;break;case F:c=r*u,y=r*l,v=a*u,d=a*l,i[0]=h*u,i[4]=v*o-y,i[8]=c*o+d,i[1]=h*l,i[5]=d*o+c,i[9]=y*o-v,i[2]=-o,i[6]=a*h,i[10]=r*h;break;case A:p=r*h,z=r*o,g=a*h,w=a*o,i[0]=h*u,i[4]=w-p*l,i[8]=g*l+z,i[1]=l,i[5]=r*u,i[9]=-a*u,i[2]=-o*u,i[6]=z*l+g,i[10]=p-w*l;break;case V:p=r*h,z=r*o,g=a*h,w=a*o,i[0]=h*u,i[4]=-l,i[8]=o*u,i[1]=p*l+w,i[5]=r*u,i[9]=z*l-g,i[2]=g*l-z,i[6]=a*u,i[10]=w*l+p}return i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(t){var i=this.elements,e=t.x,n=t.y,s=t.z,r=t.w,a=e+e,h=n+n,o=s+s,u=e*a,l=e*h,c=e*o,y=n*h,v=n*o,d=s*o,f=r*a,m=r*h,x=r*o;return i[0]=1-(y+d),i[4]=l-x,i[8]=c+m,i[1]=l+x,i[5]=1-(u+d),i[9]=v-f,i[2]=c-m,i[6]=v+f,i[10]=1-(u+y),i[3]=0,i[7]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,this}},{key:"lookAt",value:function(t,i,e){var n=this.elements,s=X,r=Y,a=Z;return a.subVectors(t,i),0===a.lengthSquared()&&(a.z=1),a.normalize(),s.crossVectors(e,a),0===s.lengthSquared()&&(1===Math.abs(e.z)?a.x+=1e-4:a.z+=1e-4,a.normalize(),s.crossVectors(e,a)),s.normalize(),r.crossVectors(a,s),n[0]=s.x,n[4]=r.x,n[8]=a.x,n[1]=s.y,n[5]=r.y,n[9]=a.y,n[2]=s.z,n[6]=r.z,n[10]=a.z,this}},{key:"multiplyMatrices",value:function(t,i){var e=this.elements,n=t.elements,s=i.elements,r=n[0],a=n[4],h=n[8],o=n[12],u=n[1],l=n[5],c=n[9],y=n[13],v=n[2],d=n[6],f=n[10],m=n[14],x=n[3],k=n[7],p=n[11],z=n[15],g=s[0],w=s[4],M=s[8],b=s[12],S=s[1],q=s[5],P=s[9],A=s[13],T=s[2],V=s[6],C=s[10],F=s[14],O=s[3],U=s[7],B=s[11],E=s[15];return e[0]=r*g+a*S+h*T+o*O,e[4]=r*w+a*q+h*V+o*U,e[8]=r*M+a*P+h*C+o*B,e[12]=r*b+a*A+h*F+o*E,e[1]=u*g+l*S+c*T+y*O,e[5]=u*w+l*q+c*V+y*U,e[9]=u*M+l*P+c*C+y*B,e[13]=u*b+l*A+c*F+y*E,e[2]=v*g+d*S+f*T+m*O,e[6]=v*w+d*q+f*V+m*U,e[10]=v*M+d*P+f*C+m*B,e[14]=v*b+d*A+f*F+m*E,e[3]=x*g+k*S+p*T+z*O,e[7]=x*w+k*q+p*V+z*U,e[11]=x*M+k*P+p*C+z*B,e[15]=x*b+k*A+p*F+z*E,this}},{key:"multiply",value:function(t){return this.multiplyMatrices(this,t)}},{key:"premultiply",value:function(t){return this.multiplyMatrices(t,this)}},{key:"multiplyScalar",value:function(t){var i=this.elements;return i[0]*=t,i[4]*=t,i[8]*=t,i[12]*=t,i[1]*=t,i[5]*=t,i[9]*=t,i[13]*=t,i[2]*=t,i[6]*=t,i[10]*=t,i[14]*=t,i[3]*=t,i[7]*=t,i[11]*=t,i[15]*=t,this}},{key:"determinant",value:function(){var t=this.elements,i=t[0],e=t[4],n=t[8],s=t[12],r=t[1],a=t[5],h=t[9],o=t[13],u=t[2],l=t[6],c=t[10],y=t[14],v=i*a,d=i*h,f=i*o,m=e*r,x=e*h,k=e*o,p=n*r,z=n*a,g=n*o,w=s*r,M=s*a,b=s*h;return t[3]*(b*l-g*l-M*c+k*c+z*y-x*y)+t[7]*(d*y-f*c+w*c-p*y+g*u-b*u)+t[11]*(f*l-v*y-w*l+m*y+M*u-k*u)+t[15]*(-z*u-d*l+v*c+p*l-m*c+x*u)}},{key:"getInverse",value:function(t){var i=this.elements,e=t.elements,n=e[0],s=e[1],r=e[2],a=e[3],h=e[4],o=e[5],u=e[6],l=e[7],c=e[8],y=e[9],v=e[10],d=e[11],f=e[12],m=e[13],x=e[14],k=e[15],p=y*x*l-m*v*l+m*u*d-o*x*d-y*u*k+o*v*k,z=f*v*l-c*x*l-f*u*d+h*x*d+c*u*k-h*v*k,g=c*m*l-f*y*l+f*o*d-h*m*d-c*o*k+h*y*k,w=f*y*u-c*m*u-f*o*v+h*m*v+c*o*x-h*y*x,M=n*p+s*z+r*g+a*w,b=void 0;return 0!==M?(b=1/M,i[0]=p*b,i[1]=(m*v*a-y*x*a-m*r*d+s*x*d+y*r*k-s*v*k)*b,i[2]=(o*x*a-m*u*a+m*r*l-s*x*l-o*r*k+s*u*k)*b,i[3]=(y*u*a-o*v*a-y*r*l+s*v*l+o*r*d-s*u*d)*b,i[4]=z*b,i[5]=(c*x*a-f*v*a+f*r*d-n*x*d-c*r*k+n*v*k)*b,i[6]=(f*u*a-h*x*a-f*r*l+n*x*l+h*r*k-n*u*k)*b,i[7]=(h*v*a-c*u*a+c*r*l-n*v*l-h*r*d+n*u*d)*b,i[8]=g*b,i[9]=(f*y*a-c*m*a-f*s*d+n*m*d+c*s*k-n*y*k)*b,i[10]=(h*m*a-f*o*a+f*s*l-n*m*l-h*s*k+n*o*k)*b,i[11]=(c*o*a-h*y*a-c*s*l+n*y*l+h*s*d-n*o*d)*b,i[12]=w*b,i[13]=(c*m*r-f*y*r+f*s*v-n*m*v-c*s*x+n*y*x)*b,i[14]=(f*o*r-h*m*r-f*s*u+n*m*u+h*s*x-n*o*x)*b,i[15]=(h*y*r-c*o*r+c*s*u-n*y*u-h*s*v+n*o*v)*b):(console.error("Can't invert matrix, determinant is zero",t),this.identity()),this}},{key:"transpose",value:function(){var t=this.elements,i=void 0;return i=t[1],t[1]=t[4],t[4]=i,i=t[2],t[2]=t[8],t[8]=i,i=t[6],t[6]=t[9],t[9]=i,i=t[3],t[3]=t[12],t[12]=i,i=t[7],t[7]=t[13],t[13]=i,i=t[11],t[11]=t[14],t[14]=i,this}},{key:"scale",value:function(t,i,e){var n=this.elements;return n[0]*=t,n[4]*=i,n[8]*=e,n[1]*=t,n[5]*=i,n[9]*=e,n[2]*=t,n[6]*=i,n[10]*=e,n[3]*=t,n[7]*=i,n[11]*=e,this}},{key:"makeScale",value:function(t,i,e){return this.set(t,0,0,0,0,i,0,0,0,0,e,0,0,0,0,1),this}},{key:"makeTranslation",value:function(t,i,e){return this.set(1,0,0,t,0,1,0,i,0,0,1,e,0,0,0,1),this}},{key:"makeRotationX",value:function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(1,0,0,0,0,i,-e,0,0,e,i,0,0,0,0,1),this}},{key:"makeRotationY",value:function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(i,0,e,0,0,1,0,0,-e,0,i,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(t){var i=Math.cos(t),e=Math.sin(t);return this.set(i,-e,0,0,e,i,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(t,i){var e=Math.cos(i),n=Math.sin(i),s=1-e,r=t.x,a=t.y,h=t.z,o=s*r,u=s*a;return this.set(o*r+e,o*a-n*h,o*h+n*a,0,o*a+n*h,u*a+e,u*h-n*r,0,o*h-n*a,u*h+n*r,s*h*h+e,0,0,0,0,1),this}},{key:"makeShear",value:function(t,i,e){return this.set(1,i,e,0,t,1,e,0,t,i,1,0,0,0,0,1),this}},{key:"compose",value:function(t,i,e){return this.makeRotationFromQuaternion(i),this.scale(e.x,e.y,e.z),this.setPosition(t),this}},{key:"decompose",value:function(t,i,e){var n=this.elements,s=n[0],r=n[1],a=n[2],h=n[4],o=n[5],u=n[6],l=n[8],c=n[9],y=n[10],v=this.determinant(),d=X.set(s,r,a).length()*(v<0?-1:1),f=X.set(h,o,u).length(),m=X.set(l,c,y).length(),x=1/d,k=1/f,p=1/m;return t.x=n[12],t.y=n[13],t.z=n[14],n[0]*=x,n[1]*=x,n[2]*=x,n[4]*=k,n[5]*=k,n[6]*=k,n[8]*=p,n[9]*=p,n[10]*=p,i.setFromRotationMatrix(this),n[0]=s,n[1]=r,n[2]=a,n[4]=h,n[5]=o,n[6]=u,n[8]=l,n[9]=c,n[10]=y,e.x=d,e.y=f,e.z=m,this}},{key:"makePerspective",value:function(t,i,e,n,s,r){var a=this.elements,h=2*s/(i-t),o=2*s/(e-n),u=(i+t)/(i-t),l=(e+n)/(e-n),c=-(r+s)/(r-s),y=-2*r*s/(r-s);return a[0]=h,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=o,a[9]=l,a[13]=0,a[2]=0,a[6]=0,a[10]=c,a[14]=y,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}},{key:"makeOrthographic",value:function(t,i,e,n,s,r){var a=this.elements,h=1/(i-t),o=1/(e-n),u=1/(r-s),l=(i+t)*h,c=(e+n)*o,y=(r+s)*u;return a[0]=2*h,a[4]=0,a[8]=0,a[12]=-l,a[1]=0,a[5]=2*o,a[9]=0,a[13]=-c,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-y,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}},{key:"equals",value:function(t){var i=this.elements,e=t.elements,n=!0,s=void 0;for(s=0;n&&s<16;++s)i[s]!==e[s]&&(n=!1);return n}}])}(),[new p,new p,new p,new p]),G=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p;d(this,t),this.origin=i,this.direction=e}return f(t,[{key:"set",value:function(t,i){return this.origin.copy(t),this.direction.copy(i),this}},{key:"copy",value:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"at",value:function(t){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p).copy(this.direction).multiplyScalar(t).add(this.origin)}},{key:"lookAt",value:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this}},{key:"recast",value:function(t){return this.origin.copy(this.at(t,N[0])),this}},{key:"closestPointToPoint",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p,e=i.subVectors(t,this.origin).dot(this.direction);return e>=0?i.copy(this.direction).multiplyScalar(e).add(this.origin):i.copy(this.origin)}},{key:"distanceSquaredToPoint",value:function(t){var i=N[0].subVectors(t,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(t):N[0].copy(this.direction).multiplyScalar(i).add(this.origin).distanceToSquared(t)}},{key:"distanceToPoint",value:function(t){return Math.sqrt(this.distanceSquaredToPoint(t))}},{key:"distanceToPlane",value:function(t){var i=t.normal.dot(this.direction),e=0!==i?-(this.origin.dot(t.normal)+t.constant)/i:0===t.distanceToPoint(this.origin)?0:-1;return e>=0?e:null}},{key:"distanceSquaredToSegment",value:function(t,i,e,n){var s=N[0].copy(t).add(i).multiplyScalar(.5),r=N[1].copy(i).sub(t).normalize(),a=N[2].copy(this.origin).sub(s),h=.5*t.distanceTo(i),o=-this.direction.dot(r),u=a.dot(this.direction),l=-a.dot(r),c=a.lengthSq(),y=Math.abs(1-o*o),v=void 0,d=void 0,f=void 0,m=void 0,x=void 0;return y>0?(d=o*u-l,f=h*y,(v=o*l-u)>=0?d>=-f?d<=f?x=(v*=m=1/y)*(v+o*(d*=m)+2*u)+d*(o*v+d+2*l)+c:(d=h,x=-(v=Math.max(0,-(o*d+u)))*v+d*(d+2*l)+c):(d=-h,x=-(v=Math.max(0,-(o*d+u)))*v+d*(d+2*l)+c):d<=-f?x=-(v=Math.max(0,-(-o*h+u)))*v+(d=v>0?-h:Math.min(Math.max(-h,-l),h))*(d+2*l)+c:d<=f?(v=0,x=(d=Math.min(Math.max(-h,-l),h))*(d+2*l)+c):x=-(v=Math.max(0,-(o*h+u)))*v+(d=v>0?h:Math.min(Math.max(-h,-l),h))*(d+2*l)+c):(d=o>0?-h:h,x=-(v=Math.max(0,-(o*d+u)))*v+d*(d+2*l)+c),void 0!==e&&e.copy(this.direction).multiplyScalar(v).add(this.origin),void 0!==n&&n.copy(r).multiplyScalar(d).add(s),x}},{key:"intersectSphere",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p,e=N[0].subVectors(t.center,this.origin),n=e.dot(this.direction),s=e.dot(e)-n*n,r=t.radius*t.radius,a=null,h=void 0,o=void 0,u=void 0;return s<=r&&(u=n+(h=Math.sqrt(r-s)),((o=n-h)>=0||u>=0)&&(a=o<0?this.at(u,i):this.at(o,i))),a}},{key:"intersectsSphere",value:function(t){return this.distanceToPoint(t.center)<=t.radius}},{key:"intersectPlane",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p,e=this.distanceToPlane(t);return null===e?null:this.at(e,i)}},{key:"intersectsPlane",value:function(t){var i=t.distanceToPoint(this.origin);return 0===i||t.normal.dot(this.direction)*i<0}},{key:"intersectBox",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p,e=this.origin,n=this.direction,s=t.min,r=t.max,a=1/n.x,h=1/n.y,o=1/n.z,u=null,l=void 0,c=void 0,y=void 0,v=void 0,d=void 0,f=void 0;return a>=0?(l=(s.x-e.x)*a,c=(r.x-e.x)*a):(l=(r.x-e.x)*a,c=(s.x-e.x)*a),h>=0?(y=(s.y-e.y)*h,v=(r.y-e.y)*h):(y=(r.y-e.y)*h,v=(s.y-e.y)*h),l<=v&&y<=c&&((y>l||l!=l)&&(l=y),(v<c||c!=c)&&(c=v),o>=0?(d=(s.z-e.z)*o,f=(r.z-e.z)*o):(d=(r.z-e.z)*o,f=(s.z-e.z)*o),l<=f&&d<=c&&((d>l||l!=l)&&(l=d),(f<c||c!=c)&&(c=f),c>=0&&(u=this.at(l>=0?l:c,i)))),u}},{key:"intersectsBox",value:function(t){return null!==this.intersectBox(t,N[0])}},{key:"intersectTriangle",value:function(t,i,e,n,s){var r=this.direction,a=N[0],h=N[1],o=N[2],u=N[3],l=null,c=void 0,y=void 0,v=void 0,d=void 0,f=void 0;return h.subVectors(i,t),o.subVectors(e,t),u.crossVectors(h,o),0===(c=r.dot(u))||n&&c>0||(c>0?y=1:(y=-1,c=-c),a.subVectors(this.origin,t),(v=y*r.dot(o.crossVectors(a,o)))>=0&&(d=y*r.dot(h.cross(a)))>=0&&v+d<=c&&(f=-y*a.dot(u))>=0&&(l=this.at(f/c,s))),l}},{key:"applyMatrix4",value:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}},{key:"equals",value:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}]),t}(),H=(function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;d(this,t),this.radius=i,this.phi=e,this.theta=n}f(t,[{key:"set",value:function(t,i,e){return this.radius=t,this.phi=i,this.theta=e,this}},{key:"copy",value:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"setFromVector3",value:function(t){return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(Math.min(Math.max(t.y/this.radius,-1),1))),this.makeSafe()}},{key:"makeSafe",value:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}}])}(),function(){function t(){d(this,t),this.elements=new Float32Array([1,0,0,1,0,1])}f(t,[{key:"set",value:function(t,i,e,n,s,r){var a=this.elements;return a[0]=t,a[1]=i,a[3]=n,a[2]=e,a[4]=s,a[5]=r,this}},{key:"identity",value:function(){return this.set(1,0,0,1,0,1),this}},{key:"copy",value:function(t){var i=t.elements;return this.set(i[0],i[1],i[2],i[3],i[4],i[5]),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toMatrix3",value:function(t){var i=t.elements;t.set(i[0],i[1],i[2],i[1],i[3],i[4],i[2],i[4],i[5])}},{key:"add",value:function(t){var i=this.elements,e=t.elements;return i[0]+=e[0],i[1]+=e[1],i[3]+=e[3],i[2]+=e[2],i[4]+=e[4],i[5]+=e[5],this}},{key:"norm",value:function(){var t=this.elements,i=t[1]*t[1],e=t[2]*t[2],n=t[4]*t[4];return Math.sqrt(t[0]*t[0]+i+e+i+t[3]*t[3]+n+e+n+t[5]*t[5])}},{key:"off",value:function(){var t=this.elements;return Math.sqrt(2*(t[1]*t[1]+t[2]*t[2]+t[4]*t[4]))}},{key:"applyToVector3",value:function(t){var i=t.x,e=t.y,n=t.z,s=this.elements;return t.x=s[0]*i+s[1]*e+s[2]*n,t.y=s[1]*i+s[3]*e+s[4]*n,t.z=s[2]*i+s[4]*e+s[5]*n,t}},{key:"equals",value:function(t){var i=this.elements,e=t.elements,n=!0,s=void 0;for(s=0;n&&s<6;++s)i[s]!==e[s]&&(n=!1);return n}}],[{key:"calculateIndex",value:function(t,i){return 3-(3-t)*(2-t)/2+i}}])}(),function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;d(this,t),this.x=i,this.y=e,this.z=n,this.w=s}f(t,[{key:"set",value:function(t,i,e,n){return this.x=t,this.y=i,this.z=e,this.w=n,this}},{key:"copy",value:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w,this}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"fromArray",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=t[i],this.y=t[i+1],this.z=t[i+2],this.w=t[i+3],this}},{key:"toArray",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t[i+3]=this.w,t}},{key:"setAxisAngleFromQuaternion",value:function(t){this.w=2*Math.acos(t.w);var i=Math.sqrt(1-t.w*t.w);return i<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/i,this.y=t.y/i,this.z=t.z/i),this}},{key:"setAxisAngleFromRotationMatrix",value:function(t){var i=t.elements,e=i[0],n=i[4],s=i[8],r=i[1],a=i[5],h=i[9],o=i[2],u=i[6],l=i[10],c=void 0,y=void 0,v=void 0,d=void 0,f=void 0,m=void 0,x=void 0,k=void 0,p=void 0,z=void 0,g=void 0;return Math.abs(n-r)<.01&&Math.abs(s-o)<.01&&Math.abs(h-u)<.01?Math.abs(n+r)<.1&&Math.abs(s+o)<.1&&Math.abs(h+u)<.1&&Math.abs(e+a+l-3)<.1?this.set(1,0,0,0):(c=Math.PI,x=(l+1)/2,k=(n+r)/4,p=(s+o)/4,z=(h+u)/4,(f=(e+1)/2)>(m=(a+1)/2)&&f>x?f<.01?(y=0,v=.707106781,d=.707106781):(v=k/(y=Math.sqrt(f)),d=p/y):m>x?m<.01?(y=.707106781,v=0,d=.707106781):(y=k/(v=Math.sqrt(m)),d=z/v):x<.01?(y=.707106781,v=.707106781,d=0):(y=p/(d=Math.sqrt(x)),v=z/d),this.set(y,v,d,c)):(g=Math.sqrt((u-h)*(u-h)+(s-o)*(s-o)+(r-n)*(r-n)),Math.abs(g)<.001&&(g=1),this.x=(u-h)/g,this.y=(s-o)/g,this.z=(r-n)/g,this.w=Math.acos((e+a+l-1)/2)),this}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}},{key:"addScalar",value:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}},{key:"addVectors",value:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this.w=t.w+i.w,this}},{key:"addScaledVector",value:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this.w+=t.w*i,this}},{key:"sub",value:function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}},{key:"subScalar",value:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}},{key:"subVectors",value:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this.w=t.w-i.w,this}},{key:"multiply",value:function(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}},{key:"multiplyScalar",value:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}},{key:"multiplyVectors",value:function(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this.w=t.w*i.w,this}},{key:"divide",value:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}},{key:"divideScalar",value:function(t){return this.x/=t,this.y/=t,this.z/=t,this.w/=t,this}},{key:"applyMatrix4",value:function(t){var i=this.x,e=this.y,n=this.z,s=this.w,r=t.elements;return this.x=r[0]*i+r[4]*e+r[8]*n+r[12]*s,this.y=r[1]*i+r[5]*e+r[9]*n+r[13]*s,this.z=r[2]*i+r[6]*e+r[10]*n+r[14]*s,this.w=r[3]*i+r[7]*e+r[11]*n+r[15]*s,this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"lengthSquared",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanDistanceTo",value:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)+Math.abs(this.w-t.w)}},{key:"distanceToSquared",value:function(t){var i=this.x-t.x,e=this.y-t.y,n=this.z-t.z,s=this.w-t.w;return i*i+e*e+n*n+s*s}},{key:"distanceTo",value:function(t){return Math.sqrt(this.distanceToSquared(t))}},{key:"normalize",value:function(){return this.divideScalar(this.length())}},{key:"setLength",value:function(t){return this.normalize().multiplyScalar(t)}},{key:"min",value:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}},{key:"max",value:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}},{key:"clamp",value:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this.w=Math.max(t.w,Math.min(i.w,this.w)),this}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"lerp",value:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this.w+=(t.w-this.w)*i,this}},{key:"lerpVectors",value:function(t,i,e){return this.subVectors(i,t).multiplyScalar(e).add(t)}},{key:"equals",value:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}}])}(),new p),J=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p;d(this,t),this.min=i,this.max=e,this.children=null}return f(t,[{key:"getCenter",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p).addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getDimensions",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p).subVectors(this.max,this.min)}},{key:"split",value:function(){var t=this.min,i=this.max,e=this.getCenter(H),n=this.children=[null,null,null,null,null,null,null,null],s=void 0,r=void 0;for(s=0;s<8;++s)r=K[s],n[s]=new this.constructor(new p(0===r[0]?t.x:e.x,0===r[1]?t.y:e.y,0===r[2]?t.z:e.z),new p(0===r[0]?e.x:i.x,0===r[1]?e.y:i.y,0===r[2]?e.z:i.z))}}]),t}(),K=[new Uint8Array([0,0,0]),new Uint8Array([0,0,1]),new Uint8Array([0,1,0]),new Uint8Array([0,1,1]),new Uint8Array([1,0,0]),new Uint8Array([1,0,1]),new Uint8Array([1,1,0]),new Uint8Array([1,1,1])],W=[new Uint8Array([0,4]),new Uint8Array([1,5]),new Uint8Array([2,6]),new Uint8Array([3,7]),new Uint8Array([0,2]),new Uint8Array([1,3]),new Uint8Array([4,6]),new Uint8Array([5,7]),new Uint8Array([0,1]),new Uint8Array([2,3]),new Uint8Array([4,5]),new Uint8Array([6,7])],$=new p,tt=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;d(this,t),this.min=i,this.size=e,this.children=null}return f(t,[{key:"getCenter",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p).copy(this.min).addScalar(.5*this.size)}},{key:"getDimensions",value:function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:new p).set(this.size,this.size,this.size)}},{key:"split",value:function(){var t=this.min,i=this.getCenter($),e=.5*this.size,n=this.children=[null,null,null,null,null,null,null,null],s=void 0,r=void 0;for(s=0;s<8;++s)r=K[s],n[s]=new this.constructor(new p(0===r[0]?t.x:i.x,0===r[1]?t.y:i.y,0===r[2]?t.z:i.z),e)}},{key:"max",get:function(){return this.min.clone().addScalar(this.size)}}]),t}(),it=function(){function t(){var i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];d(this,t),this.value=i,this.done=e}return f(t,[{key:"reset",value:function(){this.value=null,this.done=!1}}]),t}(),et=new g,nt=function(){function t(i){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;d(this,t),this.octree=i,this.region=e,this.cull=null!==e,this.result=new it,this.trace=null,this.indices=null,this.reset()}return f(t,[{key:"reset",value:function(){var t=this.octree.root;return this.trace=[],this.indices=[],null!==t&&(et.min=t.min,et.max=t.max,this.cull&&!this.region.intersectsBox(et)||(this.trace.push(t),this.indices.push(0))),this.result.reset(),this}},{key:"next",value:function(){for(var t=this.cull,i=this.region,e=this.indices,n=this.trace,s=null,r=n.length-1,a=void 0,h=void 0,o=void 0;null===s&&r>=0;)if(a=e[r],h=n[r].children,++e[r],a<8)if(null!==h){if(o=h[a],t&&(et.min=o.min,et.max=o.max,!i.intersectsBox(et)))continue;n.push(o),e.push(0),++r}else s=n.pop(),e.pop();else n.pop(),e.pop(),--r;return this.result.value=s,this.result.done=null===s,this.result}},{key:"return",value:function(t){return this.result.value=t,this.result.done=!0,this.result}},{key:Symbol.iterator,value:function(){return this}}]),t}(),st=[new p,new p,new p],rt=new g,at=new G,ht=[new Uint8Array([4,2,1]),new Uint8Array([5,3,8]),new Uint8Array([6,8,3]),new Uint8Array([7,8,8]),new Uint8Array([8,6,5]),new Uint8Array([8,7,8]),new Uint8Array([8,8,7]),new Uint8Array([8,8,8])],ot=0,ut=function(){function t(){d(this,t)}return f(t,null,[{key:"intersectOctree",value:function(t,i,e){var s=rt.min.set(0,0,0),r=rt.max.subVectors(t.max,t.min),a=t.getDimensions(st[0]),h=st[1].copy(a).multiplyScalar(.5),o=at.origin.copy(i.ray.origin),u=at.direction.copy(i.ray.direction),l=void 0,c=void 0,y=void 0,v=void 0,d=void 0,f=void 0,m=void 0,x=void 0,k=void 0;o.sub(t.getCenter(st[2])).add(h),ot=0,u.x<0&&(o.x=a.x-o.x,u.x=-u.x,ot|=4),u.y<0&&(o.y=a.y-o.y,u.y=-u.y,ot|=2),u.z<0&&(o.z=a.z-o.z,u.z=-u.z,ot|=1),l=1/u.x,c=1/u.y,y=1/u.z,v=(s.x-o.x)*l,d=(r.x-o.x)*l,f=(s.y-o.y)*c,m=(r.y-o.y)*c,x=(s.z-o.z)*y,k=(r.z-o.z)*y,Math.max(Math.max(v,f),x)<Math.min(Math.min(d,m),k)&&n(t.root,v,f,x,d,m,k,i,e)}}]),t}(),lt=new g,ct=function(){function t(i,e){d(this,t),this.root=void 0!==i&&void 0!==e?new J(i,e):null}return f(t,[{key:"getCenter",value:function(t){return this.root.getCenter(t)}},{key:"getDimensions",value:function(t){return this.root.getDimensions(t)}},{key:"getDepth",value:function(){return s(this.root)}},{key:"cull",value:function(t){var i=[];return r(this.root,t,i),i}},{key:"findOctantsByLevel",value:function(t){var i=[];return a(this.root,t,0,i),i}},{key:"raycast",value:function(t){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];return ut.intersectOctree(this,t,i),i}},{key:"leaves",value:function(t){return new nt(this,t)}},{key:Symbol.iterator,value:function(){return new nt(this)}},{key:"min",get:function(){return this.root.min}},{key:"max",get:function(){return this.root.max}},{key:"children",get:function(){return this.root.children}}]),t}(),yt=new p,vt=function(t){function i(t,e){d(this,i);var n=x(this,(i.__proto__||Object.getPrototypeOf(i)).call(this,t,e));return n.points=null,n.data=null,n}return m(i,J),f(i,[{key:"distanceToSquared",value:function(t){return yt.copy(t).clamp(this.min,this.max).sub(t).lengthSquared()}},{key:"distanceToCenterSquared",value:function(t){var i=this.getCenter(yt),e=t.x-i.x,n=t.y-i.x,s=t.z-i.z;return e*e+n*n+s*s}},{key:"contains",value:function(t,i){var e=this.min,n=this.max;return t.x>=e.x-i&&t.y>=e.y-i&&t.z>=e.z-i&&t.x<=n.x+i&&t.y<=n.y+i&&t.z<=n.z+i}},{key:"redistribute",value:function(t){var i=this.children,e=this.points,n=this.data,s=void 0,r=void 0,a=void 0,h=void 0,o=void 0,u=void 0,l=void 0;if(null!==i)for(s=0,a=e.length;s<a;++s)for(u=e[s],l=n[s],r=0,h=i.length;r<h;++r)if((o=i[r]).contains(u,t)){null===o.points&&(o.points=[],o.data=[]),o.points.push(u),o.data.push(l);break}this.points=null,this.data=null}},{key:"merge",value:function(){var t=this.children,i=void 0,e=void 0,n=void 0;if(null!==t){for(this.points=[],this.data=[],i=0,e=t.length;i<e;++i)if(null!==(n=t[i]).points){var s,r;(s=this.points).push.apply(s,k(n.points)),(r=this.data).push.apply(r,k(n.data))}this.children=null}}}]),i}(),dt=function t(i,e,n){var s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;d(this,t),this.distance=i,this.distanceToRay=e,this.point=n,this.object=s},ft=1e-6,mt=function(t){function i(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:8;d(this,i);var a=x(this,(i.__proto__||Object.getPrototypeOf(i)).call(this));return a.root=new vt(t,e),a.bias=Math.max(0,n),a.maxPoints=Math.max(1,Math.round(s)),a.maxDepth=Math.max(0,Math.round(r)),a.pointCount=0,a}return m(i,ct),f(i,[{key:"countPoints",value:function(t){return h(t)}},{key:"put",value:function(t,i){return o(t,i,this,this.root,0)}},{key:"remove",value:function(t){return u(t,this,this.root,null)}},{key:"fetch",value:function(t){return l(t,this,this.root)}},{key:"move",value:function(t,i){return c(t,i,this,this.root,null,0)}},{key:"findNearestPoint",value:function(t){return y(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,arguments.length>2&&void 0!==arguments[2]&&arguments[2],this.root)}},{key:"findPoints",value:function(t,i){var e=[];return v(t,i,arguments.length>2&&void 0!==arguments[2]&&arguments[2],this.root,e),e}},{key:"raycast",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=function t(i,e,n){null===i&&(i=Function.prototype);var s=Object.getOwnPropertyDescriptor(i,e);if(void 0===s){var r=Object.getPrototypeOf(i);return null===r?void 0:t(r,e,n)}if("value"in s)return s.value;var a=s.get;if(void 0!==a)return a.call(n)}(i.prototype.__proto__||Object.getPrototypeOf(i.prototype),"raycast",this).call(this,t);return n.length>0&&this.testPoints(n,t,e),e}},{key:"testPoints",value:function(t,i,e){var n=i.params.Points.threshold,s=n*n,r=void 0,a=void 0,h=void 0,o=void 0,u=void 0,l=void 0,c=void 0,y=void 0,v=void 0,d=void 0,f=void 0;for(u=0,c=t.length;u<c;++u)if(v=t[u],null!==(d=v.points))for(l=0,y=d.length;l<y;++l)f=d[l],(o=i.ray.distanceSqToPoint(f))<s&&(r=i.ray.closestPointToPoint(f),(a=i.ray.origin.distanceTo(r))>=i.near&&a<=i.far&&(h=Math.sqrt(o),e.push(new dt(a,h,r,v.data[l]))))}}]),i}(),xt=new g,kt=new p,pt=new p,zt=new p,gt=function(){function t(){d(this,t)}return f(t,null,[{key:"recycleOctants",value:function(t,i){var e=t.min,n=t.getCenter(pt),s=t.getDimensions(zt).multiplyScalar(.5),r=t.children,a=i.length,h=void 0,o=void 0,u=void 0,l=void 0;for(h=0;h<8;++h)for(u=K[h],xt.min.addVectors(e,kt.fromArray(u).multiply(s)),xt.max.addVectors(n,kt.fromArray(u).multiply(s)),o=0;o<a;++o)if(null!==(l=i[o])&&xt.min.equals(l.min)&&xt.max.equals(l.max)){r[h]=l,i[o]=null;break}}}]),t}();t.CubicOctant=tt,t.edges=W,t.Octant=J,t.Octree=ct,t.OctantIterator=nt,t.OctreeRaycaster=ut,t.pattern=K,t.PointOctant=vt,t.PointOctree=mt,t.RayPointIntersection=dt,t.OctreeUtils=gt,Object.defineProperty(t,"__esModule",{value:!0})});